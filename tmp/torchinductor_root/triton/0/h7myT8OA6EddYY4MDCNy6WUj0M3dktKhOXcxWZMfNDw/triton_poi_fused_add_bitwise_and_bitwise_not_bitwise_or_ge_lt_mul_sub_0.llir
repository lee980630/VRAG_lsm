; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_add_bitwise_and_bitwise_not_bitwise_or_ge_lt_mul_sub_0(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3, i32 %4, i32 %5, i32 %6, i32 %7, i32 %8) local_unnamed_addr !dbg !7 {
  %10 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %11 = shl i32 %10, 8, !dbg !11
  %12 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %13 = shl i32 %12, 1, !dbg !12
  %14 = and i32 %13, 254, !dbg !12
  %15 = or disjoint i32 %11, %14, !dbg !13
  %16 = or disjoint i32 %15, 1, !dbg !13
  %17 = icmp slt i32 %15, %8, !dbg !14
  %18 = icmp slt i32 %16, %8, !dbg !14
  %19 = sext i32 %15 to i64, !dbg !15
  %20 = getelementptr i64, ptr addrspace(1) %0, i64 %19, !dbg !15
  %21 = sext i32 %16 to i64, !dbg !15
  %22 = getelementptr i64, ptr addrspace(1) %0, i64 %21, !dbg !15
  %23 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09@$2 ld.global.b64 { $0 }, [ $1 + 0 ];", "=l,l,b"(ptr addrspace(1) %20, i1 %17) #1, !dbg !16
  %24 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09@$2 ld.global.b64 { $0 }, [ $1 + 0 ];", "=l,l,b"(ptr addrspace(1) %22, i1 %18) #1, !dbg !16
  %25 = sext i32 %3 to i64, !dbg !17
  %26 = icmp slt i64 %23, %25, !dbg !17
  %27 = icmp slt i64 %24, %25, !dbg !17
  %28 = sext i32 %4 to i64, !dbg !18
  %29 = icmp sge i64 %23, %28, !dbg !18
  %30 = icmp sge i64 %24, %28, !dbg !18
  %.not5 = or i1 %26, %29, !dbg !19
  %.not12 = or i1 %27, %30, !dbg !20
  %31 = sext i32 %5 to i64, !dbg !20
  %32 = icmp slt i64 %23, %31, !dbg !20
  %33 = icmp slt i64 %24, %31, !dbg !20
  %34 = sext i32 %6 to i64, !dbg !21
  %35 = icmp sge i64 %23, %34, !dbg !21
  %36 = icmp sge i64 %24, %34, !dbg !21
  %.not7 = or i1 %32, %35, !dbg !22
  %.not14 = or i1 %33, %36, !dbg !23
  %.not2 = and i1 %.not5, %.not7, !dbg !23
  %.not9 = and i1 %.not12, %.not14, !dbg !24
  %37 = select i1 %.not5, i64 0, i64 %25, !dbg !24
  %38 = select i1 %.not12, i64 0, i64 %25, !dbg !24
  %39 = add i32 %3, %5, !dbg !25
  %40 = add i32 %4, %7, !dbg !25
  %41 = sub i32 %39, %40, !dbg !25
  %42 = sext i32 %41 to i64, !dbg !26
  %43 = select i1 %.not7, i64 0, i64 %42, !dbg !26
  %44 = select i1 %.not14, i64 0, i64 %42, !dbg !26
  %45 = add nsw i64 %43, %37, !dbg !27
  %46 = sub i64 %23, %45, !dbg !27
  %47 = add nsw i64 %44, %38, !dbg !27
  %48 = sub i64 %24, %47, !dbg !27
  %49 = select i1 %.not2, i64 0, i64 %46, !dbg !28
  %50 = select i1 %.not9, i64 0, i64 %48, !dbg !28
  %51 = getelementptr i64, ptr addrspace(1) %1, i64 %19, !dbg !29
  %52 = getelementptr i64, ptr addrspace(1) %1, i64 %21, !dbg !29
  tail call void asm sideeffect "@$2 st.global.b64 [ $1 + 0 ], { $0 };", "l,l,b"(i64 %49, ptr addrspace(1) %51, i1 %17) #1, !dbg !30
  tail call void asm sideeffect "@$2 st.global.b64 [ $1 + 0 ], { $0 };", "l,l,b"(i64 %50, ptr addrspace(1) %52, i1 %18) #1, !dbg !30
  %53 = getelementptr i1, ptr addrspace(1) %2, i64 %19, !dbg !31
  %54 = getelementptr i1, ptr addrspace(1) %2, i64 %21, !dbg !31
  %55 = zext i1 %.not2 to i8, !dbg !32
  %56 = zext i1 %.not9 to i8, !dbg !32
  tail call void asm sideeffect "@$2 st.global.b8 [ $1 + 0 ], { $0 };", "c,l,b"(i8 %55, ptr addrspace(1) %53, i1 %17) #1, !dbg !32
  tail call void asm sideeffect "@$2 st.global.b8 [ $1 + 0 ], { $0 };", "c,l,b"(i8 %56, ptr addrspace(1) %54, i1 %18) #1, !dbg !32
  ret void, !dbg !33
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "csessucbymhqbr6apy6mi4wnubefsf5n34ghp4h4qaww3nvpianf.py", directory: "/root/workspace/VRAG_test/VRAG_lsm/tmp/torchinductor_root/se")
!4 = !{ptr @triton_poi_fused_add_bitwise_and_bitwise_not_bitwise_or_ge_lt_mul_sub_0, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_add_bitwise_and_bitwise_not_bitwise_or_ge_lt_mul_sub_0, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_add_bitwise_and_bitwise_not_bitwise_or_ge_lt_mul_sub_0", linkageName: "triton_poi_fused_add_bitwise_and_bitwise_not_bitwise_or_ge_lt_mul_sub_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 20, column: 28, scope: !7)
!11 = !DILocation(line: 20, column: 33, scope: !7)
!12 = !DILocation(line: 21, column: 36, scope: !7)
!13 = !DILocation(line: 21, column: 23, scope: !7)
!14 = !DILocation(line: 22, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 30, scope: !7)
!16 = !DILocation(line: 24, column: 35, scope: !7)
!17 = !DILocation(line: 26, column: 19, scope: !7)
!18 = !DILocation(line: 28, column: 18, scope: !7)
!19 = !DILocation(line: 29, column: 18, scope: !7)
!20 = !DILocation(line: 31, column: 19, scope: !7)
!21 = !DILocation(line: 33, column: 18, scope: !7)
!22 = !DILocation(line: 34, column: 19, scope: !7)
!23 = !DILocation(line: 35, column: 19, scope: !7)
!24 = !DILocation(line: 38, column: 20, scope: !7)
!25 = !DILocation(line: 40, column: 38, scope: !7)
!26 = !DILocation(line: 41, column: 20, scope: !7)
!27 = !DILocation(line: 43, column: 19, scope: !7)
!28 = !DILocation(line: 44, column: 20, scope: !7)
!29 = !DILocation(line: 46, column: 25, scope: !7)
!30 = !DILocation(line: 46, column: 37, scope: !7)
!31 = !DILocation(line: 47, column: 25, scope: !7)
!32 = !DILocation(line: 47, column: 37, scope: !7)
!33 = !DILocation(line: 47, column: 4, scope: !7)
