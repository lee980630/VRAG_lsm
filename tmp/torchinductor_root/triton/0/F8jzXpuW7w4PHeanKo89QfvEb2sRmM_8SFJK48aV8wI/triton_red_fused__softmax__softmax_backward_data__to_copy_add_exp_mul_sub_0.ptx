//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_80
.address_size 64

	// .globl	triton_red_fused__softmax__softmax_backward_data__to_copy_add_exp_mul_sub_0 // -- Begin function triton_red_fused__softmax__softmax_backward_data__to_copy_add_exp_mul_sub_0
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_red_fused__softmax__softmax_backward_data__to_copy_add_exp_mul_sub_0
.visible .entry triton_red_fused__softmax__softmax_backward_data__to_copy_add_exp_mul_sub_0(
	.param .u64 .ptr .global .align 1 triton_red_fused__softmax__softmax_backward_data__to_copy_add_exp_mul_sub_0_param_0,
	.param .u64 .ptr .global .align 1 triton_red_fused__softmax__softmax_backward_data__to_copy_add_exp_mul_sub_0_param_1,
	.param .u64 .ptr .global .align 1 triton_red_fused__softmax__softmax_backward_data__to_copy_add_exp_mul_sub_0_param_2,
	.param .u64 .ptr .global .align 1 triton_red_fused__softmax__softmax_backward_data__to_copy_add_exp_mul_sub_0_param_3,
	.param .u64 .ptr .global .align 1 triton_red_fused__softmax__softmax_backward_data__to_copy_add_exp_mul_sub_0_param_4,
	.param .u64 .ptr .global .align 1 triton_red_fused__softmax__softmax_backward_data__to_copy_add_exp_mul_sub_0_param_5,
	.param .u32 triton_red_fused__softmax__softmax_backward_data__to_copy_add_exp_mul_sub_0_param_6,
	.param .u32 triton_red_fused__softmax__softmax_backward_data__to_copy_add_exp_mul_sub_0_param_7,
	.param .u32 triton_red_fused__softmax__softmax_backward_data__to_copy_add_exp_mul_sub_0_param_8
)
.reqntid 512, 1, 1
{
	.reg .pred 	%p<46>;
	.reg .b16 	%rs<34>;
	.reg .b32 	%r<121>;
	.reg .f32 	%f<141>;
	.reg .b64 	%rd<34>;
	.loc	1 19 0                          // cl6phv4rsflmzoictvylqdbycivqffrcenwe7umneg7erfstf7xg.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cl6phv4rsflmzoictvylqdbycivqffrcenwe7umneg7erfstf7xg.py:19:0

// %bb.0:
	ld.param.u32 	%r23, [triton_red_fused__softmax__softmax_backward_data__to_copy_add_exp_mul_sub_0_param_8];
	ld.param.u32 	%r22, [triton_red_fused__softmax__softmax_backward_data__to_copy_add_exp_mul_sub_0_param_7];
	ld.param.u64 	%rd3, [triton_red_fused__softmax__softmax_backward_data__to_copy_add_exp_mul_sub_0_param_4];
	ld.param.u64 	%rd2, [triton_red_fused__softmax__softmax_backward_data__to_copy_add_exp_mul_sub_0_param_1];
	ld.param.u64 	%rd8, [triton_red_fused__softmax__softmax_backward_data__to_copy_add_exp_mul_sub_0_param_0];
$L__tmp0:
	.loc	1 20 28                         // cl6phv4rsflmzoictvylqdbycivqffrcenwe7umneg7erfstf7xg.py:20:28
	// begin inline asm
	mov.u32 %r24, %ctaid.x;
	// end inline asm
	.loc	1 22 21                         // cl6phv4rsflmzoictvylqdbycivqffrcenwe7umneg7erfstf7xg.py:22:21
	setp.lt.s32 	%p5, %r24, %r22;
	ld.param.u64 	%rd9, [triton_red_fused__softmax__softmax_backward_data__to_copy_add_exp_mul_sub_0_param_2];
	.loc	1 23 33                         // cl6phv4rsflmzoictvylqdbycivqffrcenwe7umneg7erfstf7xg.py:23:33
	mov.u32 	%r1, %tid.x;
	ld.param.u64 	%rd10, [triton_red_fused__softmax__softmax_backward_data__to_copy_add_exp_mul_sub_0_param_3];
	and.b32  	%r2, %r1, 31;
	shr.u32 	%r3, %r1, 5;
	and.b32  	%r4, %r1, 511;
	ld.param.u32 	%r28, [triton_red_fused__softmax__softmax_backward_data__to_copy_add_exp_mul_sub_0_param_6];
	.loc	1 25 30                         // cl6phv4rsflmzoictvylqdbycivqffrcenwe7umneg7erfstf7xg.py:25:30
	cvt.s64.s32 	%rd1, %r24;
	mul.wide.s32 	%rd11, %r24, 4;
	add.s64 	%rd5, %rd8, %rd11;
	.loc	1 25 35                         // cl6phv4rsflmzoictvylqdbycivqffrcenwe7umneg7erfstf7xg.py:25:35
	// begin inline asm
	mov.u32 %r25, 0x0;
	@%p5 ld.global.L1::evict_last.b32 { %r25 }, [ %rd5 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r25;
	.loc	1 26 30                         // cl6phv4rsflmzoictvylqdbycivqffrcenwe7umneg7erfstf7xg.py:26:30
	add.s64 	%rd6, %rd9, %rd11;
	.loc	1 26 35                         // cl6phv4rsflmzoictvylqdbycivqffrcenwe7umneg7erfstf7xg.py:26:35
	// begin inline asm
	mov.u32 %r26, 0x0;
	@%p5 ld.global.L1::evict_last.b32 { %r26 }, [ %rd6 + 0 ];
	// end inline asm
	mov.b32 	%f2, %r26;
	.loc	1 27 30                         // cl6phv4rsflmzoictvylqdbycivqffrcenwe7umneg7erfstf7xg.py:27:30
	add.s64 	%rd7, %rd10, %rd11;
	.loc	1 27 35                         // cl6phv4rsflmzoictvylqdbycivqffrcenwe7umneg7erfstf7xg.py:27:35
	// begin inline asm
	mov.u32 %r92, 0x0;
	@%p5 ld.global.L1::evict_last.b32 { %r92 }, [ %rd7 + 0 ];
	// end inline asm
	mov.b32 	%f3, %r92;
	.loc	1 33 43                         // cl6phv4rsflmzoictvylqdbycivqffrcenwe7umneg7erfstf7xg.py:33:43
	mul.lo.s32 	%r8, %r24, %r28;
	mov.f32 	%f140, 0f00000000;
	.loc	1 34 16                         // cl6phv4rsflmzoictvylqdbycivqffrcenwe7umneg7erfstf7xg.py:34:16
	sub.f32 	%f4, %f140, %f1;
	.loc	1 29 36                         // cl6phv4rsflmzoictvylqdbycivqffrcenwe7umneg7erfstf7xg.py:29:36
	setp.lt.s32 	%p8, %r23, 1;
	cvt.u32.u64 	%r115, %rd1;
	mov.u16 	%rs14, 0;
	@%p8 bra 	$L__BB0_4;
// %bb.1:                               // %.lr.ph.preheader
	.loc	1 0 0                           // cl6phv4rsflmzoictvylqdbycivqffrcenwe7umneg7erfstf7xg.py:0:0
	or.b32  	%r5, %r4, 512;
	or.b32  	%r6, %r4, 1024;
	or.b32  	%r7, %r4, 1536;
	.loc	1 22 21                         // cl6phv4rsflmzoictvylqdbycivqffrcenwe7umneg7erfstf7xg.py:22:21
	setp.lt.s32 	%p1, %r115, %r22;
	mov.f32 	%f136, 0f00000000;
	mov.b32 	%r119, 0;
	mov.f32 	%f137, %f136;
	mov.f32 	%f138, %f136;
	mov.f32 	%f139, %f136;
$L__BB0_2:                              // %.lr.ph
                                        // =>This Inner Loop Header: Depth=1
	.loc	1 30 27                         // cl6phv4rsflmzoictvylqdbycivqffrcenwe7umneg7erfstf7xg.py:30:27
	or.b32  	%r47, %r119, %r7;
	or.b32  	%r48, %r119, %r6;
	or.b32  	%r49, %r119, %r5;
	or.b32  	%r50, %r119, %r4;
	.loc	1 33 39                         // cl6phv4rsflmzoictvylqdbycivqffrcenwe7umneg7erfstf7xg.py:33:39
	add.s32 	%r51, %r50, %r8;
	add.s32 	%r52, %r49, %r8;
	add.s32 	%r53, %r48, %r8;
	add.s32 	%r54, %r47, %r8;
	.loc	1 33 34                         // cl6phv4rsflmzoictvylqdbycivqffrcenwe7umneg7erfstf7xg.py:33:34
	mul.wide.s32 	%rd16, %r51, 2;
	add.s64 	%rd12, %rd2, %rd16;
	mul.wide.s32 	%rd17, %r52, 2;
	add.s64 	%rd13, %rd2, %rd17;
	mul.wide.s32 	%rd18, %r53, 2;
	add.s64 	%rd14, %rd2, %rd18;
	mul.wide.s32 	%rd19, %r54, 2;
	add.s64 	%rd15, %rd2, %rd19;
	.loc	1 31 25                         // cl6phv4rsflmzoictvylqdbycivqffrcenwe7umneg7erfstf7xg.py:31:25
	setp.lt.s32 	%p17, %r50, %r23;
	setp.lt.s32 	%p18, %r49, %r23;
	setp.lt.s32 	%p19, %r48, %r23;
	setp.lt.s32 	%p20, %r47, %r23;
	.loc	1 33 56                         // cl6phv4rsflmzoictvylqdbycivqffrcenwe7umneg7erfstf7xg.py:33:56
	and.pred  	%p16, %p1, %p20;
	and.pred  	%p14, %p1, %p19;
	and.pred  	%p12, %p1, %p18;
	and.pred  	%p10, %p1, %p17;
	.loc	1 33 48                         // cl6phv4rsflmzoictvylqdbycivqffrcenwe7umneg7erfstf7xg.py:33:48
	// begin inline asm
	mov.u16 %rs1, 0x0;
	@%p10 ld.global.L1::evict_last.b16 { %rs1 }, [ %rd12 + 0 ];
	@!%p10 mov.u16 %rs1, %rs14;
	// end inline asm
	// begin inline asm
	mov.u16 %rs3, 0x0;
	@%p12 ld.global.L1::evict_last.b16 { %rs3 }, [ %rd13 + 0 ];
	@!%p12 mov.u16 %rs3, %rs14;
	// end inline asm
	// begin inline asm
	mov.u16 %rs5, 0x0;
	@%p14 ld.global.L1::evict_last.b16 { %rs5 }, [ %rd14 + 0 ];
	@!%p14 mov.u16 %rs5, %rs14;
	// end inline asm
	// begin inline asm
	mov.u16 %rs7, 0x0;
	@%p16 ld.global.L1::evict_last.b16 { %rs7 }, [ %rd15 + 0 ];
	@!%p16 mov.u16 %rs7, %rs14;
	// end inline asm
	.loc	1 33 107                        // cl6phv4rsflmzoictvylqdbycivqffrcenwe7umneg7erfstf7xg.py:33:107
	// begin inline asm
	cvt.f32.bf16 %r31, %rs1;
	// end inline asm
	mov.b32 	%f34, %r31;
	// begin inline asm
	cvt.f32.bf16 %r32, %rs3;
	// end inline asm
	mov.b32 	%f35, %r32;
	// begin inline asm
	cvt.f32.bf16 %r33, %rs5;
	// end inline asm
	mov.b32 	%f36, %r33;
	// begin inline asm
	cvt.f32.bf16 %r34, %rs7;
	// end inline asm
	mov.b32 	%f37, %r34;
	.loc	1 36 22                         // cl6phv4rsflmzoictvylqdbycivqffrcenwe7umneg7erfstf7xg.py:36:22
	mul.f32 	%f38, %f4, %f37;
	mul.f32 	%f39, %f4, %f36;
	mul.f32 	%f40, %f4, %f35;
	mul.f32 	%f41, %f4, %f34;
	.loc	1 37 22                         // cl6phv4rsflmzoictvylqdbycivqffrcenwe7umneg7erfstf7xg.py:37:22
	sub.f32 	%f42, %f34, %f2;
	sub.f32 	%f43, %f35, %f2;
	sub.f32 	%f44, %f36, %f2;
	sub.f32 	%f45, %f37, %f2;
	.loc	1 38 27                         // cl6phv4rsflmzoictvylqdbycivqffrcenwe7umneg7erfstf7xg.py:38:27
	mul.f32 	%f27, %f42, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f26, %f27;
	// end inline asm
	mul.f32 	%f29, %f43, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f28, %f29;
	// end inline asm
	mul.f32 	%f31, %f44, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f30, %f31;
	// end inline asm
	mul.f32 	%f33, %f45, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f32, %f33;
	// end inline asm
	.loc	1 39 22                         // cl6phv4rsflmzoictvylqdbycivqffrcenwe7umneg7erfstf7xg.py:39:22
	mov.b32 	%r36, %f26;
	// begin inline asm
	div.full.f32 %r35, %r36, %r92;
	// end inline asm
	mov.b32 	%f46, %r35;
	mov.b32 	%r39, %f28;
	// begin inline asm
	div.full.f32 %r38, %r39, %r92;
	// end inline asm
	mov.b32 	%f47, %r38;
	mov.b32 	%r42, %f30;
	// begin inline asm
	div.full.f32 %r41, %r42, %r92;
	// end inline asm
	mov.b32 	%f48, %r41;
	mov.b32 	%r45, %f32;
	// begin inline asm
	div.full.f32 %r44, %r45, %r92;
	// end inline asm
	mov.b32 	%f49, %r44;
	.loc	1 42 25                         // cl6phv4rsflmzoictvylqdbycivqffrcenwe7umneg7erfstf7xg.py:42:25
	fma.rn.f32 	%f50, %f41, %f46, %f136;
	fma.rn.f32 	%f51, %f40, %f47, %f137;
	fma.rn.f32 	%f52, %f39, %f48, %f138;
	fma.rn.f32 	%f53, %f38, %f49, %f139;
	.loc	1 43 48                         // cl6phv4rsflmzoictvylqdbycivqffrcenwe7umneg7erfstf7xg.py:43:48
	selp.f32 	%f139, %f53, %f139, %p16;
	selp.f32 	%f138, %f52, %f138, %p14;
	selp.f32 	%f137, %f51, %f137, %p12;
	selp.f32 	%f136, %f50, %f136, %p10;
	.loc	1 29 36                         // cl6phv4rsflmzoictvylqdbycivqffrcenwe7umneg7erfstf7xg.py:29:36
	add.s32 	%r119, %r119, 2048;
	setp.lt.s32 	%p21, %r119, %r23;
	@%p21 bra 	$L__BB0_2;
// %bb.3:                               // %._crit_edge.loopexit
$L__tmp1:
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f54, %f136, %f137;
	add.f32 	%f55, %f138, %f54;
	add.f32 	%f140, %f139, %f55;
$L__tmp2:
$L__BB0_4:                              // %._crit_edge
	.loc	1 22 21                         // cl6phv4rsflmzoictvylqdbycivqffrcenwe7umneg7erfstf7xg.py:22:21
	setp.lt.s32 	%p25, %r115, %r22;
$L__tmp3:
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r63, %f140;
	shfl.sync.bfly.b32	%r64, %r63, 16, 31, -1;
	mov.b32 	%f56, %r64;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f57, %f140, %f56;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r65, %f57;
	shfl.sync.bfly.b32	%r66, %r65, 8, 31, -1;
	mov.b32 	%f58, %r66;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f59, %f57, %f58;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r67, %f59;
	shfl.sync.bfly.b32	%r68, %r67, 4, 31, -1;
	mov.b32 	%f60, %r68;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f61, %f59, %f60;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r69, %f61;
	shfl.sync.bfly.b32	%r70, %r69, 2, 31, -1;
	mov.b32 	%f62, %r70;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f63, %f61, %f62;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r71, %f63;
	shfl.sync.bfly.b32	%r72, %r71, 1, 31, -1;
	mov.b32 	%f64, %r72;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f65, %f63, %f64;
	.loc	2 267 36                        // standard.py:267:36
	setp.eq.s32 	%p22, %r2, 0;
	and.b32  	%r73, %r3, 15;
	shl.b32 	%r74, %r73, 2;
	mov.u32 	%r75, global_smem;
	add.s32 	%r55, %r75, %r74;
	mov.b32 	%r56, %f65;
	// begin inline asm
	@%p22 st.shared.b32 [ %r55 + 0 ], %r56;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p23, %r1, 16;
	shl.b32 	%r76, %r1, 2;
	add.s32 	%r58, %r75, %r76;
	// begin inline asm
	@%p23 ld.shared.b32 %r57, [ %r58 + 0 ];
	// end inline asm
	mov.b32 	%f66, %r57;
	shfl.sync.bfly.b32	%r77, %r57, 8, 31, -1;
	mov.b32 	%f67, %r77;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f68, %f66, %f67;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r78, %f68;
	shfl.sync.bfly.b32	%r79, %r78, 4, 31, -1;
	mov.b32 	%f69, %r79;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f70, %f68, %f69;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r80, %f70;
	shfl.sync.bfly.b32	%r81, %r80, 2, 31, -1;
	mov.b32 	%f71, %r81;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f72, %f70, %f71;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r82, %f72;
	shfl.sync.bfly.b32	%r83, %r82, 1, 31, -1;
	mov.b32 	%f73, %r83;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f74, %f72, %f73;
	.loc	2 267 36                        // standard.py:267:36
	and.b32  	%r84, %r1, 15;
	setp.eq.s32 	%p27, %r84, 0;
	and.pred  	%p24, %p23, %p27;
	mov.b32 	%r60, %f74;
	// begin inline asm
	@%p24 st.shared.b32 [ %r58 + 0 ], %r60;
	// end inline asm
	bar.sync 	0;
$L__tmp4:
	.loc	1 45 31                         // cl6phv4rsflmzoictvylqdbycivqffrcenwe7umneg7erfstf7xg.py:45:31
	shl.b64 	%rd21, %rd1, 2;
	add.s64 	%rd20, %rd3, %rd21;
	.loc	1 45 36                         // cl6phv4rsflmzoictvylqdbycivqffrcenwe7umneg7erfstf7xg.py:45:36
	// begin inline asm
	mov.u32 %r61, 0x0;
	@%p25 ld.global.L1::evict_last.b32 { %r61 }, [ %rd20 + 0 ];
	// end inline asm
	.loc	1 46 36                         // cl6phv4rsflmzoictvylqdbycivqffrcenwe7umneg7erfstf7xg.py:46:36
	@%p8 bra 	$L__BB0_7;
// %bb.5:                               // %.lr.ph10.preheader
	.loc	1 0 36                          // cl6phv4rsflmzoictvylqdbycivqffrcenwe7umneg7erfstf7xg.py:0:36
	ld.param.u64 	%rd4, [triton_red_fused__softmax__softmax_backward_data__to_copy_add_exp_mul_sub_0_param_5];
	mov.b32 	%r120, 0;
	ld.shared.f32 	%f19, [global_smem];
	mov.b32 	%f20, %r61;
	.loc	1 46 36                         // cl6phv4rsflmzoictvylqdbycivqffrcenwe7umneg7erfstf7xg.py:46:36
	add.s32 	%r19, %r8, %r4;
$L__BB0_6:                              // %.lr.ph10
                                        // =>This Inner Loop Header: Depth=1
	.loc	1 47 27                         // cl6phv4rsflmzoictvylqdbycivqffrcenwe7umneg7erfstf7xg.py:47:27
	add.s32 	%r107, %r4, %r120;
	add.s32 	%r108, %r107, 512;
	add.s32 	%r109, %r107, 1024;
	.loc	1 48 25                         // cl6phv4rsflmzoictvylqdbycivqffrcenwe7umneg7erfstf7xg.py:48:25
	add.s32 	%r110, %r107, 1536;
	setp.lt.s32 	%p41, %r107, %r23;
	setp.lt.s32 	%p42, %r108, %r23;
	setp.lt.s32 	%p43, %r109, %r23;
	setp.lt.s32 	%p44, %r110, %r23;
	.loc	1 50 40                         // cl6phv4rsflmzoictvylqdbycivqffrcenwe7umneg7erfstf7xg.py:50:40
	add.s32 	%r111, %r19, %r120;
	add.s32 	%r112, %r111, 512;
	add.s32 	%r113, %r111, 1024;
	.loc	1 50 35                         // cl6phv4rsflmzoictvylqdbycivqffrcenwe7umneg7erfstf7xg.py:50:35
	add.s32 	%r114, %r111, 1536;
	mul.wide.s32 	%rd30, %r111, 2;
	add.s64 	%rd22, %rd2, %rd30;
	mul.wide.s32 	%rd31, %r112, 2;
	add.s64 	%rd23, %rd2, %rd31;
	mul.wide.s32 	%rd32, %r113, 2;
	add.s64 	%rd24, %rd2, %rd32;
	mul.wide.s32 	%rd33, %r114, 2;
	add.s64 	%rd25, %rd2, %rd33;
	.loc	1 50 57                         // cl6phv4rsflmzoictvylqdbycivqffrcenwe7umneg7erfstf7xg.py:50:57
	and.pred  	%p28, %p25, %p41;
	and.pred  	%p30, %p25, %p42;
	and.pred  	%p32, %p25, %p43;
	and.pred  	%p34, %p25, %p44;
	.loc	1 50 49                         // cl6phv4rsflmzoictvylqdbycivqffrcenwe7umneg7erfstf7xg.py:50:49
	// begin inline asm
	mov.u16 %rs13, 0x0;
	@%p28 ld.global.L1::evict_first.b16 { %rs13 }, [ %rd22 + 0 ];
	@!%p28 mov.u16 %rs13, %rs14;
	// end inline asm
	// begin inline asm
	mov.u16 %rs15, 0x0;
	@%p30 ld.global.L1::evict_first.b16 { %rs15 }, [ %rd23 + 0 ];
	@!%p30 mov.u16 %rs15, %rs14;
	// end inline asm
	// begin inline asm
	mov.u16 %rs17, 0x0;
	@%p32 ld.global.L1::evict_first.b16 { %rs17 }, [ %rd24 + 0 ];
	@!%p32 mov.u16 %rs17, %rs14;
	// end inline asm
	// begin inline asm
	mov.u16 %rs19, 0x0;
	@%p34 ld.global.L1::evict_first.b16 { %rs19 }, [ %rd25 + 0 ];
	@!%p34 mov.u16 %rs19, %rs14;
	// end inline asm
	.loc	1 50 109                        // cl6phv4rsflmzoictvylqdbycivqffrcenwe7umneg7erfstf7xg.py:50:109
	// begin inline asm
	cvt.f32.bf16 %r86, %rs13;
	// end inline asm
	mov.b32 	%f91, %r86;
	// begin inline asm
	cvt.f32.bf16 %r87, %rs15;
	// end inline asm
	mov.b32 	%f92, %r87;
	// begin inline asm
	cvt.f32.bf16 %r88, %rs17;
	// end inline asm
	mov.b32 	%f93, %r88;
	// begin inline asm
	cvt.f32.bf16 %r89, %rs19;
	// end inline asm
	mov.b32 	%f94, %r89;
	.loc	1 53 24                         // cl6phv4rsflmzoictvylqdbycivqffrcenwe7umneg7erfstf7xg.py:53:24
	sub.f32 	%f95, %f91, %f2;
	sub.f32 	%f96, %f92, %f2;
	sub.f32 	%f97, %f93, %f2;
	sub.f32 	%f98, %f94, %f2;
	.loc	1 54 28                         // cl6phv4rsflmzoictvylqdbycivqffrcenwe7umneg7erfstf7xg.py:54:28
	mul.f32 	%f76, %f95, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f75, %f76;
	// end inline asm
	mul.f32 	%f78, %f96, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f77, %f78;
	// end inline asm
	mul.f32 	%f80, %f97, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f79, %f80;
	// end inline asm
	mul.f32 	%f82, %f98, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f81, %f82;
	// end inline asm
	.loc	1 55 24                         // cl6phv4rsflmzoictvylqdbycivqffrcenwe7umneg7erfstf7xg.py:55:24
	mov.b32 	%r91, %f75;
	// begin inline asm
	div.full.f32 %r90, %r91, %r92;
	// end inline asm
	mov.b32 	%f99, %r90;
	mov.b32 	%r94, %f77;
	// begin inline asm
	div.full.f32 %r93, %r94, %r92;
	// end inline asm
	mov.b32 	%f100, %r93;
	mov.b32 	%r97, %f79;
	// begin inline asm
	div.full.f32 %r96, %r97, %r92;
	// end inline asm
	mov.b32 	%f101, %r96;
	mov.b32 	%r100, %f81;
	// begin inline asm
	div.full.f32 %r99, %r100, %r92;
	// end inline asm
	mov.b32 	%f102, %r99;
	.loc	1 58 24                         // cl6phv4rsflmzoictvylqdbycivqffrcenwe7umneg7erfstf7xg.py:58:24
	sub.f32 	%f103, %f91, %f20;
	sub.f32 	%f104, %f92, %f20;
	sub.f32 	%f105, %f93, %f20;
	sub.f32 	%f106, %f94, %f20;
	.loc	1 59 28                         // cl6phv4rsflmzoictvylqdbycivqffrcenwe7umneg7erfstf7xg.py:59:28
	mul.f32 	%f84, %f103, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f83, %f84;
	// end inline asm
	mul.f32 	%f86, %f104, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f85, %f86;
	// end inline asm
	mul.f32 	%f88, %f105, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f87, %f88;
	// end inline asm
	mul.f32 	%f90, %f106, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f89, %f90;
	// end inline asm
	.loc	1 60 23                         // cl6phv4rsflmzoictvylqdbycivqffrcenwe7umneg7erfstf7xg.py:60:23
	mul.f32 	%f107, %f83, %f1;
	mul.f32 	%f108, %f85, %f1;
	mul.f32 	%f109, %f87, %f1;
	mul.f32 	%f110, %f89, %f1;
	.loc	1 62 24                         // cl6phv4rsflmzoictvylqdbycivqffrcenwe7umneg7erfstf7xg.py:62:24
	fma.rn.f32 	%f111, %f4, %f99, %f107;
	fma.rn.f32 	%f112, %f4, %f100, %f108;
	fma.rn.f32 	%f113, %f4, %f101, %f109;
	fma.rn.f32 	%f114, %f4, %f102, %f110;
	mov.f32 	%f115, 0f00000000;
	.loc	1 63 17                         // cl6phv4rsflmzoictvylqdbycivqffrcenwe7umneg7erfstf7xg.py:63:17
	sub.f32 	%f116, %f115, %f99;
	sub.f32 	%f117, %f115, %f100;
	sub.f32 	%f118, %f115, %f101;
	sub.f32 	%f119, %f115, %f102;
	.loc	1 64 24                         // cl6phv4rsflmzoictvylqdbycivqffrcenwe7umneg7erfstf7xg.py:64:24
	mul.f32 	%f120, %f4, %f91;
	mul.f32 	%f121, %f4, %f92;
	mul.f32 	%f122, %f4, %f93;
	mul.f32 	%f123, %f4, %f94;
	.loc	1 65 24                         // cl6phv4rsflmzoictvylqdbycivqffrcenwe7umneg7erfstf7xg.py:65:24
	mul.f32 	%f124, %f120, %f99;
	mul.f32 	%f125, %f121, %f100;
	mul.f32 	%f126, %f122, %f101;
	mul.f32 	%f127, %f123, %f102;
	.loc	1 66 44                         // cl6phv4rsflmzoictvylqdbycivqffrcenwe7umneg7erfstf7xg.py:66:44
	fma.rn.ftz.f32 	%f128, %f116, %f19, %f124;
	fma.rn.ftz.f32 	%f129, %f117, %f19, %f125;
	fma.rn.ftz.f32 	%f130, %f118, %f19, %f126;
	fma.rn.ftz.f32 	%f131, %f119, %f19, %f127;
	.loc	1 68 24                         // cl6phv4rsflmzoictvylqdbycivqffrcenwe7umneg7erfstf7xg.py:68:24
	add.f32 	%f132, %f111, %f128;
	add.f32 	%f133, %f112, %f129;
	add.f32 	%f134, %f113, %f130;
	add.f32 	%f135, %f114, %f131;
	.loc	1 69 29                         // cl6phv4rsflmzoictvylqdbycivqffrcenwe7umneg7erfstf7xg.py:69:29
	add.s64 	%rd26, %rd4, %rd30;
	add.s64 	%rd27, %rd4, %rd31;
	add.s64 	%rd28, %rd4, %rd32;
	add.s64 	%rd29, %rd4, %rd33;
	.loc	1 69 50                         // cl6phv4rsflmzoictvylqdbycivqffrcenwe7umneg7erfstf7xg.py:69:50
	mov.b32 	%r102, %f132;
	// begin inline asm
	cvt.rn.bf16.f32 %rs25, %r102;
	// end inline asm
	mov.b32 	%r103, %f133;
	// begin inline asm
	cvt.rn.bf16.f32 %rs26, %r103;
	// end inline asm
	mov.b32 	%r104, %f134;
	// begin inline asm
	cvt.rn.bf16.f32 %rs27, %r104;
	// end inline asm
	mov.b32 	%r105, %f135;
	// begin inline asm
	cvt.rn.bf16.f32 %rs28, %r105;
	// end inline asm
	// begin inline asm
	@%p28 st.global.b16 [ %rd26 + 0 ], { %rs25 };
	// end inline asm
	// begin inline asm
	@%p30 st.global.b16 [ %rd27 + 0 ], { %rs26 };
	// end inline asm
	// begin inline asm
	@%p32 st.global.b16 [ %rd28 + 0 ], { %rs27 };
	// end inline asm
	// begin inline asm
	@%p34 st.global.b16 [ %rd29 + 0 ], { %rs28 };
	// end inline asm
	.loc	1 46 36                         // cl6phv4rsflmzoictvylqdbycivqffrcenwe7umneg7erfstf7xg.py:46:36
	add.s32 	%r120, %r120, 2048;
	setp.lt.s32 	%p45, %r120, %r23;
	@%p45 bra 	$L__BB0_6;
$L__BB0_7:                              // %._crit_edge11
	.loc	1 46 4                          // cl6phv4rsflmzoictvylqdbycivqffrcenwe7umneg7erfstf7xg.py:46:4
	ret;
$L__tmp5:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/root/workspace/VRAG_test/VRAG_lsm/tmp/torchinductor_root/l6/cl6phv4rsflmzoictvylqdbycivqffrcenwe7umneg7erfstf7xg.py"
	.file	2 "/root/workspace/miniconda3/envs/vrag/lib/python3.10/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 263                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x100 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 108
.b8 54
.b8 112
.b8 104
.b8 118
.b8 52
.b8 114
.b8 115
.b8 102
.b8 108
.b8 109
.b8 122
.b8 111
.b8 105
.b8 99
.b8 116
.b8 118
.b8 121
.b8 108
.b8 113
.b8 100
.b8 98
.b8 121
.b8 99
.b8 105
.b8 118
.b8 113
.b8 102
.b8 102
.b8 114
.b8 99
.b8 101
.b8 110
.b8 119
.b8 101
.b8 55
.b8 117
.b8 109
.b8 110
.b8 101
.b8 103
.b8 55
.b8 101
.b8 114
.b8 102
.b8 115
.b8 116
.b8 102
.b8 55
.b8 120
.b8 103
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 114
.b8 111
.b8 111
.b8 116
.b8 47
.b8 119
.b8 111
.b8 114
.b8 107
.b8 115
.b8 112
.b8 97
.b8 99
.b8 101
.b8 47
.b8 86
.b8 82
.b8 65
.b8 71
.b8 95
.b8 116
.b8 101
.b8 115
.b8 116
.b8 47
.b8 86
.b8 82
.b8 65
.b8 71
.b8 95
.b8 108
.b8 115
.b8 109
.b8 47
.b8 116
.b8 109
.b8 112
.b8 47
.b8 116
.b8 111
.b8 114
.b8 99
.b8 104
.b8 105
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 114
.b8 111
.b8 111
.b8 116
.b8 47
.b8 108
.b8 54
.b8 0
.b8 2                                   // Abbrev [2] 0x8e:0x4e DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 100
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 115
.b8 111
.b8 102
.b8 116
.b8 109
.b8 97
.b8 120
.b8 95
.b8 95
.b8 115
.b8 111
.b8 102
.b8 116
.b8 109
.b8 97
.b8 120
.b8 95
.b8 98
.b8 97
.b8 99
.b8 107
.b8 119
.b8 97
.b8 114
.b8 100
.b8 95
.b8 100
.b8 97
.b8 116
.b8 97
.b8 95
.b8 95
.b8 116
.b8 111
.b8 95
.b8 99
.b8 111
.b8 112
.b8 121
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 101
.b8 120
.b8 112
.b8 95
.b8 109
.b8 117
.b8 108
.b8 95
.b8 115
.b8 117
.b8 98
.b8 95
.b8 48
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xdc:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 142                                // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xf1:0x18 DW_TAG_inlined_subroutine
.b32 142                                // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 44                                  // DW_AT_call_line
.b8 27                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
