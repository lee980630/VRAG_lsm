//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_80
.address_size 64

	// .globl	rotary_kernel           // -- Begin function rotary_kernel
.extern .shared .align 16 .b8 global_smem[];
                                        // @rotary_kernel
.visible .entry rotary_kernel(
	.param .u64 .ptr .global .align 1 rotary_kernel_param_0,
	.param .u64 .ptr .global .align 1 rotary_kernel_param_1,
	.param .u64 .ptr .global .align 1 rotary_kernel_param_2,
	.param .u64 .ptr .global .align 1 rotary_kernel_param_3,
	.param .u32 rotary_kernel_param_4,
	.param .u32 rotary_kernel_param_5,
	.param .u32 rotary_kernel_param_6,
	.param .u32 rotary_kernel_param_7,
	.param .u32 rotary_kernel_param_8,
	.param .u32 rotary_kernel_param_9,
	.param .u32 rotary_kernel_param_10,
	.param .u32 rotary_kernel_param_11,
	.param .u32 rotary_kernel_param_12,
	.param .u32 rotary_kernel_param_13
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<45>;
	.reg .b32 	%r<134>;
	.reg .f32 	%f<82>;
	.reg .b64 	%rd<24>;
	.loc	1 13 0                          // rotary.py:13:0
$L__func_begin0:
	.loc	1 13 0                          // rotary.py:13:0

// %bb.0:
	ld.param.u32 	%r5, [rotary_kernel_param_5];
$L__tmp0:
	.loc	1 47 26                         // rotary.py:47:26
	// begin inline asm
	mov.u32 %r15, %ctaid.y;
	// end inline asm
	.loc	1 59 15                         // rotary.py:59:15
	shl.b32 	%r3, %r15, 3;
	.loc	1 59 26                         // rotary.py:59:26
	setp.lt.s32 	%p1, %r3, %r5;
	@%p1 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:
	.loc	1 0 26                          // rotary.py:0:26
	ld.param.u32 	%r13, [rotary_kernel_param_13];
	ld.param.u32 	%r12, [rotary_kernel_param_12];
	ld.param.u32 	%r11, [rotary_kernel_param_11];
	ld.param.u32 	%r10, [rotary_kernel_param_10];
	ld.param.u32 	%r9, [rotary_kernel_param_9];
	ld.param.u32 	%r8, [rotary_kernel_param_8];
	ld.param.u32 	%r7, [rotary_kernel_param_7];
	ld.param.u32 	%r6, [rotary_kernel_param_6];
	ld.param.u32 	%r4, [rotary_kernel_param_4];
	ld.param.u64 	%rd4, [rotary_kernel_param_3];
	ld.param.u64 	%rd3, [rotary_kernel_param_2];
	ld.param.u64 	%rd2, [rotary_kernel_param_1];
	ld.param.u64 	%rd1, [rotary_kernel_param_0];
	// begin inline asm
	mov.u32 %r14, %ctaid.x;
	// end inline asm
	// begin inline asm
	mov.u32 %r16, %ctaid.z;
	// end inline asm
	.loc	1 52 32                         // rotary.py:52:32
	mul.lo.s32 	%r91, %r16, %r8;
	.loc	1 52 20                         // rotary.py:52:20
	mul.wide.s32 	%rd15, %r91, 4;
	add.s64 	%rd16, %rd1, %rd15;
	.loc	1 51 28                         // rotary.py:51:28
	mul.lo.s32 	%r92, %r16, %r11;
	.loc	1 51 16                         // rotary.py:51:16
	mul.wide.s32 	%rd17, %r92, 4;
	add.s64 	%rd18, %rd2, %rd17;
	.loc	1 62 20                         // rotary.py:62:20
	shl.b32 	%r93, %r14, 1;
	.loc	1 62 43                         // rotary.py:62:43
	mov.u32 	%r94, %tid.x;
	bfe.u32 	%r95, %r94, 4, 1;
	.loc	1 62 30                         // rotary.py:62:30
	or.b32  	%r96, %r93, %r95;
	.loc	1 63 40                         // rotary.py:63:40
	bfe.u32 	%r97, %r94, 4, 3;
	bfe.u32 	%r98, %r94, 5, 2;
	.loc	1 63 27                         // rotary.py:63:27
	or.b32  	%r99, %r3, %r97;
	or.b32  	%r100, %r3, %r98;
	or.b32  	%r101, %r100, 4;
	.loc	1 65 21                         // rotary.py:65:21
	add.s32 	%r102, %r99, %r4;
	.loc	1 70 60                         // rotary.py:70:60
	shl.b32 	%r103, %r94, 2;
	and.b32  	%r104, %r103, 60;
	.loc	1 70 52                         // rotary.py:70:52
	mad.lo.s32 	%r105, %r102, 40, %r104;
	.loc	1 70 17                         // rotary.py:70:17
	mul.wide.s32 	%rd19, %r105, 4;
	add.s64 	%rd5, %rd3, %rd19;
	.loc	1 71 17                         // rotary.py:71:17
	add.s64 	%rd6, %rd4, %rd19;
	.loc	1 72 32                         // rotary.py:72:32
	setp.lt.s32 	%p38, %r102, %r7;
	.loc	1 72 65                         // rotary.py:72:65
	setp.lt.u32 	%p39, %r104, 40;
	.loc	1 72 46                         // rotary.py:72:46
	and.pred  	%p2, %p39, %p38;
	mov.b32 	%r21, 1065353216;
	.loc	1 73 18                         // rotary.py:73:18
	// begin inline asm
	mov.u32 %r66, 0x0;
	mov.u32 %r67, 0x0;
	mov.u32 %r68, 0x0;
	mov.u32 %r69, 0x0;
	@%p2 ld.global.v4.b32 { %r66, %r67, %r68, %r69 }, [ %rd5 + 0 ];
	@!%p2 mov.u32 %r66, %r21;
	@!%p2 mov.u32 %r67, %r21;
	@!%p2 mov.u32 %r68, %r21;
	@!%p2 mov.u32 %r69, %r21;
	// end inline asm
	mov.b32 	%r29, 0;
	.loc	1 74 18                         // rotary.py:74:18
	// begin inline asm
	mov.u32 %r25, 0x0;
	mov.u32 %r26, 0x0;
	mov.u32 %r27, 0x0;
	mov.u32 %r28, 0x0;
	@%p2 ld.global.v4.b32 { %r25, %r26, %r27, %r28 }, [ %rd6 + 0 ];
	@!%p2 mov.u32 %r25, %r29;
	@!%p2 mov.u32 %r26, %r29;
	@!%p2 mov.u32 %r27, %r29;
	@!%p2 mov.u32 %r28, %r29;
	// end inline asm
	mov.b32 	%f1, %r25;
	mov.b32 	%f2, %r26;
	mov.b32 	%f3, %r27;
	mov.b32 	%f4, %r28;
	mov.f32 	%f5, 0f00000000;
	.loc	1 76 15                         // rotary.py:76:15
	sub.f32 	%f6, %f5, %f1;
	sub.f32 	%f7, %f5, %f2;
	sub.f32 	%f8, %f5, %f3;
	sub.f32 	%f9, %f5, %f4;
	.loc	1 80 75                         // rotary.py:80:75
	mul.lo.s32 	%r106, %r100, %r12;
	shl.b32 	%r107, %r12, 2;
	add.s32 	%r108, %r106, %r107;
	.loc	1 80 55                         // rotary.py:80:55
	mad.lo.s32 	%r109, %r96, %r13, %r104;
	.loc	1 80 93                         // rotary.py:80:93
	add.s32 	%r110, %r109, %r106;
	add.s32 	%r111, %r109, %r108;
	.loc	1 80 17                         // rotary.py:80:17
	mul.wide.s32 	%rd20, %r110, 4;
	add.s64 	%rd7, %rd18, %rd20;
	mul.wide.s32 	%rd21, %r111, 4;
	add.s64 	%rd8, %rd18, %rd21;
	.loc	1 81 81                         // rotary.py:81:81
	mul.lo.s32 	%r112, %r100, %r9;
	shl.b32 	%r113, %r9, 2;
	add.s32 	%r114, %r112, %r113;
	.loc	1 81 61                         // rotary.py:81:61
	mad.lo.s32 	%r115, %r96, %r10, %r104;
	.loc	1 81 101                        // rotary.py:81:101
	add.s32 	%r116, %r115, %r112;
	add.s32 	%r117, %r115, %r114;
	.loc	1 81 21                         // rotary.py:81:21
	mul.wide.s32 	%rd22, %r116, 4;
	add.s64 	%rd11, %rd16, %rd22;
	mul.wide.s32 	%rd23, %r117, 4;
	add.s64 	%rd12, %rd16, %rd23;
	.loc	1 82 36                         // rotary.py:82:36
	setp.lt.s32 	%p40, %r96, %r6;
	.loc	1 82 67                         // rotary.py:82:67
	setp.lt.s32 	%p41, %r100, %r5;
	setp.lt.s32 	%p42, %r101, %r5;
	.loc	1 82 47                         // rotary.py:82:47
	and.pred  	%p43, %p40, %p41;
	and.pred  	%p44, %p40, %p42;
	.loc	1 82 78                         // rotary.py:82:78
	and.pred  	%p12, %p39, %p43;
	and.pred  	%p17, %p39, %p44;
	.loc	1 83 21                         // rotary.py:83:21
	// begin inline asm
	mov.u32 %r33, 0x0;
	mov.u32 %r34, 0x0;
	mov.u32 %r35, 0x0;
	mov.u32 %r36, 0x0;
	@%p12 ld.global.v4.b32 { %r33, %r34, %r35, %r36 }, [ %rd7 + 0 ];
	@!%p12 mov.u32 %r33, %r29;
	@!%p12 mov.u32 %r34, %r29;
	@!%p12 mov.u32 %r35, %r29;
	@!%p12 mov.u32 %r36, %r29;
	// end inline asm
	mov.b32 	%f10, %r33;
	mov.b32 	%f11, %r34;
	mov.b32 	%f12, %r35;
	mov.b32 	%f13, %r36;
	// begin inline asm
	mov.u32 %r41, 0x0;
	mov.u32 %r42, 0x0;
	mov.u32 %r43, 0x0;
	mov.u32 %r44, 0x0;
	@%p17 ld.global.v4.b32 { %r41, %r42, %r43, %r44 }, [ %rd8 + 0 ];
	@!%p17 mov.u32 %r41, %r29;
	@!%p17 mov.u32 %r42, %r29;
	@!%p17 mov.u32 %r43, %r29;
	@!%p17 mov.u32 %r44, %r29;
	// end inline asm
	mov.b32 	%f14, %r41;
	mov.b32 	%f15, %r42;
	mov.b32 	%f16, %r43;
	mov.b32 	%f17, %r44;
	.loc	1 84 25                         // rotary.py:84:25
	add.s64 	%rd9, %rd7, 160;
	add.s64 	%rd10, %rd8, 160;
	.loc	1 84 21                         // rotary.py:84:21
	// begin inline asm
	mov.u32 %r49, 0x0;
	mov.u32 %r50, 0x0;
	mov.u32 %r51, 0x0;
	mov.u32 %r52, 0x0;
	@%p12 ld.global.v4.b32 { %r49, %r50, %r51, %r52 }, [ %rd9 + 0 ];
	@!%p12 mov.u32 %r49, %r29;
	@!%p12 mov.u32 %r50, %r29;
	@!%p12 mov.u32 %r51, %r29;
	@!%p12 mov.u32 %r52, %r29;
	// end inline asm
	mov.b32 	%f18, %r49;
	mov.b32 	%f19, %r50;
	mov.b32 	%f20, %r51;
	mov.b32 	%f21, %r52;
	// begin inline asm
	mov.u32 %r57, 0x0;
	mov.u32 %r58, 0x0;
	mov.u32 %r59, 0x0;
	mov.u32 %r60, 0x0;
	@%p17 ld.global.v4.b32 { %r57, %r58, %r59, %r60 }, [ %rd10 + 0 ];
	@!%p17 mov.u32 %r57, %r29;
	@!%p17 mov.u32 %r58, %r29;
	@!%p17 mov.u32 %r59, %r29;
	@!%p17 mov.u32 %r60, %r29;
	// end inline asm
	mov.b32 	%f22, %r57;
	mov.b32 	%f23, %r58;
	mov.b32 	%f24, %r59;
	mov.b32 	%f25, %r60;
	.loc	1 85 18                         // rotary.py:85:18
	shl.b32 	%r118, %r94, 1;
	and.b32  	%r119, %r118, 192;
	or.b32  	%r120, %r119, %r104;
	and.b32  	%r121, %r94, 112;
	mov.u32 	%r122, global_smem;
	add.s32 	%r123, %r122, %r121;
	shl.b32 	%r124, %r94, 4;
	and.b32  	%r125, %r124, 2032;
	add.s32 	%r65, %r123, %r125;
	mov.pred 	%p32, -1;
	// begin inline asm
	@%p32 st.shared.v4.b32 [ %r65 + 0 ], { %r66, %r67, %r68, %r69 };
	// end inline asm
	bar.sync 	0;
	shr.u32 	%r126, %r119, 2;
	add.s32 	%r127, %r122, %r126;
	shl.b32 	%r128, %r120, 2;
	add.s32 	%r129, %r127, %r128;
	ld.shared.v4.f32 	{%f26, %f27, %f28, %f29}, [%r129];
	or.b32  	%r130, %r119, 256;
	shr.u32 	%r131, %r130, 2;
	add.s32 	%r132, %r122, %r131;
	add.s32 	%r133, %r132, %r128;
	ld.shared.v4.f32 	{%f30, %f31, %f32, %f33}, [%r133+1024];
	.loc	1 85 29                         // rotary.py:85:29
	bar.sync 	0;
	mov.b32 	%r71, %f6;
	mov.b32 	%r72, %f7;
	mov.b32 	%r73, %f8;
	mov.b32 	%r74, %f9;
	// begin inline asm
	@%p32 st.shared.v4.b32 [ %r65 + 0 ], { %r71, %r72, %r73, %r74 };
	// end inline asm
	bar.sync 	0;
	ld.shared.v4.f32 	{%f34, %f35, %f36, %f37}, [%r129];
	ld.shared.v4.f32 	{%f38, %f39, %f40, %f41}, [%r133+1024];
	mul.f32 	%f42, %f34, %f18;
	mul.f32 	%f43, %f35, %f19;
	mul.f32 	%f44, %f36, %f20;
	mul.f32 	%f45, %f37, %f21;
	mul.f32 	%f46, %f38, %f22;
	mul.f32 	%f47, %f39, %f23;
	mul.f32 	%f48, %f40, %f24;
	mul.f32 	%f49, %f41, %f25;
	.loc	1 85 24                         // rotary.py:85:24
	neg.f32 	%f50, %f42;
	fma.rn.f32 	%f51, %f26, %f10, %f50;
	neg.f32 	%f52, %f43;
	fma.rn.f32 	%f53, %f27, %f11, %f52;
	neg.f32 	%f54, %f44;
	fma.rn.f32 	%f55, %f28, %f12, %f54;
	neg.f32 	%f56, %f45;
	fma.rn.f32 	%f57, %f29, %f13, %f56;
	neg.f32 	%f58, %f46;
	fma.rn.f32 	%f59, %f30, %f14, %f58;
	neg.f32 	%f60, %f47;
	fma.rn.f32 	%f61, %f31, %f15, %f60;
	neg.f32 	%f62, %f48;
	fma.rn.f32 	%f63, %f32, %f16, %f62;
	neg.f32 	%f64, %f49;
	fma.rn.f32 	%f65, %f33, %f17, %f64;
	.loc	1 86 18                         // rotary.py:86:18
	mul.f32 	%f66, %f34, %f10;
	mul.f32 	%f67, %f35, %f11;
	mul.f32 	%f68, %f36, %f12;
	mul.f32 	%f69, %f37, %f13;
	mul.f32 	%f70, %f38, %f14;
	mul.f32 	%f71, %f39, %f15;
	mul.f32 	%f72, %f40, %f16;
	mul.f32 	%f73, %f41, %f17;
	.loc	1 86 24                         // rotary.py:86:24
	fma.rn.f32 	%f74, %f26, %f18, %f66;
	fma.rn.f32 	%f75, %f27, %f19, %f67;
	fma.rn.f32 	%f76, %f28, %f20, %f68;
	fma.rn.f32 	%f77, %f29, %f21, %f69;
	fma.rn.f32 	%f78, %f30, %f22, %f70;
	fma.rn.f32 	%f79, %f31, %f23, %f71;
	fma.rn.f32 	%f80, %f32, %f24, %f72;
	fma.rn.f32 	%f81, %f33, %f25, %f73;
	.loc	1 87 22                         // rotary.py:87:22
	mov.b32 	%r75, %f51;
	mov.b32 	%r76, %f53;
	mov.b32 	%r77, %f55;
	mov.b32 	%r78, %f57;
	// begin inline asm
	@%p12 st.global.v4.b32 [ %rd11 + 0 ], { %r75, %r76, %r77, %r78 };
	// end inline asm
	mov.b32 	%r79, %f59;
	mov.b32 	%r80, %f61;
	mov.b32 	%r81, %f63;
	mov.b32 	%r82, %f65;
	// begin inline asm
	@%p17 st.global.v4.b32 [ %rd12 + 0 ], { %r79, %r80, %r81, %r82 };
	// end inline asm
	.loc	1 88 23                         // rotary.py:88:23
	add.s64 	%rd13, %rd11, 160;
	add.s64 	%rd14, %rd12, 160;
	.loc	1 88 61                         // rotary.py:88:61
	mov.b32 	%r83, %f74;
	mov.b32 	%r84, %f75;
	mov.b32 	%r85, %f76;
	mov.b32 	%r86, %f77;
	// begin inline asm
	@%p12 st.global.v4.b32 [ %rd13 + 0 ], { %r83, %r84, %r85, %r86 };
	// end inline asm
	mov.b32 	%r87, %f78;
	mov.b32 	%r88, %f79;
	mov.b32 	%r89, %f80;
	mov.b32 	%r90, %f81;
	// begin inline asm
	@%p17 st.global.v4.b32 [ %rd14 + 0 ], { %r87, %r88, %r89, %r90 };
	// end inline asm
$L__BB0_1:                              // %common.ret
	.loc	1 0 0                           // rotary.py:0:0
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/root/workspace/miniconda3/envs/vrag/lib/python3.10/site-packages/flash_attn/ops/triton/rotary.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 119                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x70 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 114                                 // DW_AT_name
.b8 111
.b8 116
.b8 97
.b8 114
.b8 121
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 114
.b8 111
.b8 111
.b8 116
.b8 47
.b8 119
.b8 111
.b8 114
.b8 107
.b8 115
.b8 112
.b8 97
.b8 99
.b8 101
.b8 47
.b8 109
.b8 105
.b8 110
.b8 105
.b8 99
.b8 111
.b8 110
.b8 100
.b8 97
.b8 51
.b8 47
.b8 101
.b8 110
.b8 118
.b8 115
.b8 47
.b8 118
.b8 114
.b8 97
.b8 103
.b8 47
.b8 108
.b8 105
.b8 98
.b8 47
.b8 112
.b8 121
.b8 116
.b8 104
.b8 111
.b8 110
.b8 51
.b8 46
.b8 49
.b8 48
.b8 47
.b8 115
.b8 105
.b8 116
.b8 101
.b8 45
.b8 112
.b8 97
.b8 99
.b8 107
.b8 97
.b8 103
.b8 101
.b8 115
.b8 47
.b8 102
.b8 108
.b8 97
.b8 115
.b8 104
.b8 95
.b8 97
.b8 116
.b8 116
.b8 110
.b8 47
.b8 111
.b8 112
.b8 115
.b8 47
.b8 116
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
	}
	.section	.debug_macinfo	{	}
