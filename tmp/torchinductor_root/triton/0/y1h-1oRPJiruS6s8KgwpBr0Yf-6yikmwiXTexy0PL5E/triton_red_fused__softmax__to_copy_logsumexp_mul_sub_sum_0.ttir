#loc = loc("/root/workspace/VRAG_test/VRAG_lsm/tmp/torchinductor_root/pi/cpifz774z2iiy6smp4ihcfpfiipen4ntxcoweyy6oqtgbwvckqca.py":19:0)
#loc1 = loc(unknown)
#loc23 = loc("/root/workspace/VRAG_test/VRAG_lsm/tmp/torchinductor_root/pi/cpifz774z2iiy6smp4ihcfpfiipen4ntxcoweyy6oqtgbwvckqca.py":35:38)
#loc45 = loc("/root/workspace/VRAG_test/VRAG_lsm/tmp/torchinductor_root/pi/cpifz774z2iiy6smp4ihcfpfiipen4ntxcoweyy6oqtgbwvckqca.py":57:27)
#loc48 = loc("/root/workspace/VRAG_test/VRAG_lsm/tmp/torchinductor_root/pi/cpifz774z2iiy6smp4ihcfpfiipen4ntxcoweyy6oqtgbwvckqca.py":58:40)
#loc64 = loc("/root/workspace/VRAG_test/VRAG_lsm/tmp/torchinductor_root/pi/cpifz774z2iiy6smp4ihcfpfiipen4ntxcoweyy6oqtgbwvckqca.py":71:27)
#loc82 = loc("/root/workspace/VRAG_test/VRAG_lsm/tmp/torchinductor_root/pi/cpifz774z2iiy6smp4ihcfpfiipen4ntxcoweyy6oqtgbwvckqca.py":86:27)
#loc99 = loc(callsite(#loc1 at #loc23))
#loc109 = loc(callsite(#loc1 at #loc45))
#loc112 = loc(callsite(#loc1 at #loc48))
#loc114 = loc(callsite(#loc1 at #loc64))
#loc116 = loc(callsite(#loc1 at #loc82))
module {
  tt.func public @triton_red_fused__softmax__to_copy_logsumexp_mul_sub_sum_0(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("/root/workspace/VRAG_test/VRAG_lsm/tmp/torchinductor_root/pi/cpifz774z2iiy6smp4ihcfpfiipen4ntxcoweyy6oqtgbwvckqca.py":19:0), %arg1: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/root/workspace/VRAG_test/VRAG_lsm/tmp/torchinductor_root/pi/cpifz774z2iiy6smp4ihcfpfiipen4ntxcoweyy6oqtgbwvckqca.py":19:0), %arg2: i32 loc("/root/workspace/VRAG_test/VRAG_lsm/tmp/torchinductor_root/pi/cpifz774z2iiy6smp4ihcfpfiipen4ntxcoweyy6oqtgbwvckqca.py":19:0), %arg3: i32 loc("/root/workspace/VRAG_test/VRAG_lsm/tmp/torchinductor_root/pi/cpifz774z2iiy6smp4ihcfpfiipen4ntxcoweyy6oqtgbwvckqca.py":19:0), %arg4: i32 loc("/root/workspace/VRAG_test/VRAG_lsm/tmp/torchinductor_root/pi/cpifz774z2iiy6smp4ihcfpfiipen4ntxcoweyy6oqtgbwvckqca.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<0.000000e+00> : tensor<1x2048xbf16> loc(#loc1)
    %c2048_i32 = arith.constant 2048 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst_0 = arith.constant dense<0.000000e+00> : tensor<1x1xf32> loc(#loc1)
    %cst_1 = arith.constant dense<0x7F800000> : tensor<1x1xf32> loc(#loc1)
    %cst_2 = arith.constant dense<0.000000e+00> : tensor<1x2048xf32> loc(#loc1)
    %cst_3 = arith.constant dense<0xFF800000> : tensor<1x2048xf32> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.cmpi slt, %0, %arg3 : i32 loc(#loc3)
    %2 = tt.splat %1 : i1 -> tensor<1x1xi1> loc(#loc3)
    %3 = tt.make_range {end = 2048 : i32, start = 0 : i32} : tensor<2048xi32> loc(#loc4)
    %4 = tt.expand_dims %3 {axis = 0 : i32} : tensor<2048xi32> -> tensor<1x2048xi32> loc(#loc5)
    %5 = tt.splat %arg4 : i32 -> tensor<1x2048xi32> loc(#loc6)
    %6 = arith.muli %arg2, %0 : i32 loc(#loc7)
    %7 = tt.splat %6 : i32 -> tensor<1x2048xi32> loc(#loc8)
    %8 = tt.splat %arg1 : !tt.ptr<bf16> -> tensor<1x2048x!tt.ptr<bf16>> loc(#loc9)
    %9 = tt.splat %1 : i1 -> tensor<1x2048xi1> loc(#loc10)
    %10 = scf.for %arg5 = %c0_i32 to %arg4 step %c2048_i32 iter_args(%arg6 = %cst_3) -> (tensor<1x2048xf32>)  : i32 {
      %54 = tt.splat %arg5 : i32 -> tensor<1x2048xi32> loc(#loc12)
      %55 = arith.addi %54, %4 : tensor<1x2048xi32> loc(#loc12)
      %56 = arith.cmpi slt, %55, %5 : tensor<1x2048xi32> loc(#loc6)
      %57 = arith.addi %55, %7 : tensor<1x2048xi32> loc(#loc8)
      %58 = tt.addptr %8, %57 : tensor<1x2048x!tt.ptr<bf16>>, tensor<1x2048xi32> loc(#loc9)
      %59 = arith.andi %56, %9 : tensor<1x2048xi1> loc(#loc10)
      %60 = tt.load %58, %59, %cst evictionPolicy = evict_last : tensor<1x2048x!tt.ptr<bf16>> loc(#loc13)
      %61 = arith.extf %60 : tensor<1x2048xbf16> to tensor<1x2048xf32> loc(#loc14)
      %62 = arith.cmpf ogt, %arg6, %61 : tensor<1x2048xf32> loc(#loc94)
      %63 = arith.cmpf une, %arg6, %arg6 : tensor<1x2048xf32> loc(#loc95)
      %64 = arith.ori %62, %63 : tensor<1x2048xi1> loc(#loc96)
      %65 = arith.select %64, %arg6, %61 : tensor<1x2048xi1>, tensor<1x2048xf32> loc(#loc97)
      %66 = arith.select %59, %65, %arg6 : tensor<1x2048xi1>, tensor<1x2048xf32> loc(#loc20)
      scf.yield %66 : tensor<1x2048xf32> loc(#loc21)
    } loc(#loc11)
    %11 = "tt.reduce"(%10) <{axis = 1 : i32}> ({
    ^bb0(%arg5: f32 loc(callsite(#loc1 at #loc23)), %arg6: f32 loc(callsite(#loc1 at #loc23))):
      %54 = arith.cmpf ogt, %arg5, %arg6 : f32 loc(#loc117)
      %55 = arith.cmpf une, %arg5, %arg5 : f32 loc(#loc118)
      %56 = arith.ori %54, %55 : i1 loc(#loc119)
      %57 = arith.select %56, %arg5, %arg6 : f32 loc(#loc120)
      tt.reduce.return %57 : f32 loc(#loc98)
    }) : (tensor<1x2048xf32>) -> tensor<1xf32> loc(#loc98)
    %12 = tt.expand_dims %11 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc24)
    %13 = tt.splat %arg4 : i32 -> tensor<1x2048xi32> loc(#loc25)
    %14 = arith.muli %arg2, %0 : i32 loc(#loc26)
    %15 = tt.splat %14 : i32 -> tensor<1x2048xi32> loc(#loc27)
    %16 = tt.splat %arg1 : !tt.ptr<bf16> -> tensor<1x2048x!tt.ptr<bf16>> loc(#loc28)
    %17 = tt.splat %1 : i1 -> tensor<1x2048xi1> loc(#loc29)
    %18 = math.absf %12 : tensor<1x1xf32> loc(#loc30)
    %19 = arith.cmpf oeq, %18, %cst_1 : tensor<1x1xf32> loc(#loc31)
    %20 = arith.select %19, %cst_0, %12 : tensor<1x1xi1>, tensor<1x1xf32> loc(#loc32)
    %21 = tt.broadcast %20 : tensor<1x1xf32> -> tensor<1x2048xf32> loc(#loc33)
    %22:2 = scf.for %arg5 = %c0_i32 to %arg4 step %c2048_i32 iter_args(%arg6 = %cst_2, %arg7 = %cst_3) -> (tensor<1x2048xf32>, tensor<1x2048xf32>)  : i32 {
      %54 = tt.splat %arg5 : i32 -> tensor<1x2048xi32> loc(#loc35)
      %55 = arith.addi %54, %4 : tensor<1x2048xi32> loc(#loc35)
      %56 = arith.cmpi slt, %55, %13 : tensor<1x2048xi32> loc(#loc25)
      %57 = arith.addi %55, %15 : tensor<1x2048xi32> loc(#loc27)
      %58 = tt.addptr %16, %57 : tensor<1x2048x!tt.ptr<bf16>>, tensor<1x2048xi32> loc(#loc28)
      %59 = arith.andi %56, %17 : tensor<1x2048xi1> loc(#loc29)
      %60 = tt.load %58, %59, %cst evictionPolicy = evict_last : tensor<1x2048x!tt.ptr<bf16>> loc(#loc36)
      %61 = arith.extf %60 : tensor<1x2048xbf16> to tensor<1x2048xf32> loc(#loc37)
      %62 = arith.subf %61, %21 : tensor<1x2048xf32> loc(#loc33)
      %63 = math.exp %62 : tensor<1x2048xf32> loc(#loc38)
      %64 = arith.addf %arg6, %63 : tensor<1x2048xf32> loc(#loc39)
      %65 = arith.select %59, %64, %arg6 : tensor<1x2048xi1>, tensor<1x2048xf32> loc(#loc40)
      %66 = arith.cmpf ogt, %arg7, %61 : tensor<1x2048xf32> loc(#loc104)
      %67 = arith.cmpf une, %arg7, %arg7 : tensor<1x2048xf32> loc(#loc105)
      %68 = arith.ori %66, %67 : tensor<1x2048xi1> loc(#loc106)
      %69 = arith.select %68, %arg7, %61 : tensor<1x2048xi1>, tensor<1x2048xf32> loc(#loc107)
      %70 = arith.select %59, %69, %arg7 : tensor<1x2048xi1>, tensor<1x2048xf32> loc(#loc42)
      scf.yield %65, %70 : tensor<1x2048xf32>, tensor<1x2048xf32> loc(#loc43)
    } loc(#loc34)
    %23 = "tt.reduce"(%22#0) <{axis = 1 : i32}> ({
    ^bb0(%arg5: f32 loc(callsite(#loc1 at #loc45)), %arg6: f32 loc(callsite(#loc1 at #loc45))):
      %54 = arith.addf %arg5, %arg6 : f32 loc(#loc121)
      tt.reduce.return %54 : f32 loc(#loc108)
    }) : (tensor<1x2048xf32>) -> tensor<1xf32> loc(#loc108)
    %24 = tt.expand_dims %23 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc47)
    %25 = "tt.reduce"(%22#1) <{axis = 1 : i32}> ({
    ^bb0(%arg5: f32 loc(callsite(#loc1 at #loc48)), %arg6: f32 loc(callsite(#loc1 at #loc48))):
      %54 = arith.cmpf ogt, %arg5, %arg6 : f32 loc(#loc122)
      %55 = arith.cmpf une, %arg5, %arg5 : f32 loc(#loc123)
      %56 = arith.ori %54, %55 : i1 loc(#loc124)
      %57 = arith.select %56, %arg5, %arg6 : f32 loc(#loc125)
      tt.reduce.return %57 : f32 loc(#loc111)
    }) : (tensor<1x2048xf32>) -> tensor<1xf32> loc(#loc111)
    %26 = tt.expand_dims %25 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc49)
    %27 = tt.splat %arg4 : i32 -> tensor<1x2048xi32> loc(#loc50)
    %28 = arith.muli %arg2, %0 : i32 loc(#loc51)
    %29 = tt.splat %28 : i32 -> tensor<1x2048xi32> loc(#loc52)
    %30 = tt.splat %arg1 : !tt.ptr<bf16> -> tensor<1x2048x!tt.ptr<bf16>> loc(#loc53)
    %31 = tt.splat %1 : i1 -> tensor<1x2048xi1> loc(#loc54)
    %32 = tt.broadcast %26 : tensor<1x1xf32> -> tensor<1x2048xf32> loc(#loc55)
    %33 = scf.for %arg5 = %c0_i32 to %arg4 step %c2048_i32 iter_args(%arg6 = %cst_2) -> (tensor<1x2048xf32>)  : i32 {
      %54 = tt.splat %arg5 : i32 -> tensor<1x2048xi32> loc(#loc57)
      %55 = arith.addi %54, %4 : tensor<1x2048xi32> loc(#loc57)
      %56 = arith.cmpi slt, %55, %27 : tensor<1x2048xi32> loc(#loc50)
      %57 = arith.addi %55, %29 : tensor<1x2048xi32> loc(#loc52)
      %58 = tt.addptr %30, %57 : tensor<1x2048x!tt.ptr<bf16>>, tensor<1x2048xi32> loc(#loc53)
      %59 = arith.andi %56, %31 : tensor<1x2048xi1> loc(#loc54)
      %60 = tt.load %58, %59, %cst evictionPolicy = evict_last : tensor<1x2048x!tt.ptr<bf16>> loc(#loc58)
      %61 = arith.extf %60 : tensor<1x2048xbf16> to tensor<1x2048xf32> loc(#loc59)
      %62 = arith.subf %61, %32 : tensor<1x2048xf32> loc(#loc55)
      %63 = math.exp %62 : tensor<1x2048xf32> loc(#loc60)
      %64 = arith.addf %arg6, %63 : tensor<1x2048xf32> loc(#loc61)
      %65 = arith.select %59, %64, %arg6 : tensor<1x2048xi1>, tensor<1x2048xf32> loc(#loc62)
      scf.yield %65 : tensor<1x2048xf32> loc(#loc63)
    } loc(#loc56)
    %34 = "tt.reduce"(%33) <{axis = 1 : i32}> ({
    ^bb0(%arg5: f32 loc(callsite(#loc1 at #loc64)), %arg6: f32 loc(callsite(#loc1 at #loc64))):
      %54 = arith.addf %arg5, %arg6 : f32 loc(#loc126)
      tt.reduce.return %54 : f32 loc(#loc113)
    }) : (tensor<1x2048xf32>) -> tensor<1xf32> loc(#loc113)
    %35 = tt.expand_dims %34 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc65)
    %36 = tt.splat %arg4 : i32 -> tensor<1x2048xi32> loc(#loc66)
    %37 = arith.muli %arg2, %0 : i32 loc(#loc67)
    %38 = tt.splat %37 : i32 -> tensor<1x2048xi32> loc(#loc68)
    %39 = tt.splat %arg1 : !tt.ptr<bf16> -> tensor<1x2048x!tt.ptr<bf16>> loc(#loc69)
    %40 = tt.splat %1 : i1 -> tensor<1x2048xi1> loc(#loc70)
    %41 = tt.broadcast %26 : tensor<1x1xf32> -> tensor<1x2048xf32> loc(#loc71)
    %42 = tt.broadcast %35 : tensor<1x1xf32> -> tensor<1x2048xf32> loc(#loc72)
    %43 = scf.for %arg5 = %c0_i32 to %arg4 step %c2048_i32 iter_args(%arg6 = %cst_2) -> (tensor<1x2048xf32>)  : i32 {
      %54 = tt.splat %arg5 : i32 -> tensor<1x2048xi32> loc(#loc74)
      %55 = arith.addi %54, %4 : tensor<1x2048xi32> loc(#loc74)
      %56 = arith.cmpi slt, %55, %36 : tensor<1x2048xi32> loc(#loc66)
      %57 = arith.addi %55, %38 : tensor<1x2048xi32> loc(#loc68)
      %58 = tt.addptr %39, %57 : tensor<1x2048x!tt.ptr<bf16>>, tensor<1x2048xi32> loc(#loc69)
      %59 = arith.andi %56, %40 : tensor<1x2048xi1> loc(#loc70)
      %60 = tt.load %58, %59, %cst evictionPolicy = evict_first : tensor<1x2048x!tt.ptr<bf16>> loc(#loc75)
      %61 = arith.extf %60 : tensor<1x2048xbf16> to tensor<1x2048xf32> loc(#loc76)
      %62 = arith.subf %61, %41 : tensor<1x2048xf32> loc(#loc71)
      %63 = math.exp %62 : tensor<1x2048xf32> loc(#loc77)
      %64 = arith.divf %63, %42 : tensor<1x2048xf32> loc(#loc72)
      %65 = arith.mulf %64, %61 : tensor<1x2048xf32> loc(#loc78)
      %66 = arith.addf %arg6, %65 : tensor<1x2048xf32> loc(#loc79)
      %67 = arith.select %59, %66, %arg6 : tensor<1x2048xi1>, tensor<1x2048xf32> loc(#loc80)
      scf.yield %67 : tensor<1x2048xf32> loc(#loc81)
    } loc(#loc73)
    %44 = "tt.reduce"(%43) <{axis = 1 : i32}> ({
    ^bb0(%arg5: f32 loc(callsite(#loc1 at #loc82)), %arg6: f32 loc(callsite(#loc1 at #loc82))):
      %54 = arith.addf %arg5, %arg6 : f32 loc(#loc127)
      tt.reduce.return %54 : f32 loc(#loc115)
    }) : (tensor<1x2048xf32>) -> tensor<1xf32> loc(#loc115)
    %45 = tt.expand_dims %44 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc83)
    %46 = math.log %24 : tensor<1x1xf32> loc(#loc84)
    %47 = math.absf %12 : tensor<1x1xf32> loc(#loc85)
    %48 = arith.cmpf oeq, %47, %cst_1 : tensor<1x1xf32> loc(#loc86)
    %49 = arith.select %48, %cst_0, %12 : tensor<1x1xi1>, tensor<1x1xf32> loc(#loc87)
    %50 = arith.addf %46, %49 : tensor<1x1xf32> loc(#loc88)
    %51 = arith.subf %50, %45 : tensor<1x1xf32> loc(#loc89)
    gpu.barrier loc(#loc90)
    %52 = tt.addptr %arg0, %0 : !tt.ptr<f32>, i32 loc(#loc91)
    %53 = tt.splat %52 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc91)
    tt.store %53, %51, %2 : tensor<1x1x!tt.ptr<f32>> loc(#loc92)
    tt.return loc(#loc93)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("/root/workspace/VRAG_test/VRAG_lsm/tmp/torchinductor_root/pi/cpifz774z2iiy6smp4ihcfpfiipen4ntxcoweyy6oqtgbwvckqca.py":20:28)
#loc3 = loc("/root/workspace/VRAG_test/VRAG_lsm/tmp/torchinductor_root/pi/cpifz774z2iiy6smp4ihcfpfiipen4ntxcoweyy6oqtgbwvckqca.py":22:21)
#loc4 = loc("/root/workspace/VRAG_test/VRAG_lsm/tmp/torchinductor_root/pi/cpifz774z2iiy6smp4ihcfpfiipen4ntxcoweyy6oqtgbwvckqca.py":23:25)
#loc5 = loc("/root/workspace/VRAG_test/VRAG_lsm/tmp/torchinductor_root/pi/cpifz774z2iiy6smp4ihcfpfiipen4ntxcoweyy6oqtgbwvckqca.py":23:33)
#loc6 = loc("/root/workspace/VRAG_test/VRAG_lsm/tmp/torchinductor_root/pi/cpifz774z2iiy6smp4ihcfpfiipen4ntxcoweyy6oqtgbwvckqca.py":28:25)
#loc7 = loc("/root/workspace/VRAG_test/VRAG_lsm/tmp/torchinductor_root/pi/cpifz774z2iiy6smp4ihcfpfiipen4ntxcoweyy6oqtgbwvckqca.py":30:43)
#loc8 = loc("/root/workspace/VRAG_test/VRAG_lsm/tmp/torchinductor_root/pi/cpifz774z2iiy6smp4ihcfpfiipen4ntxcoweyy6oqtgbwvckqca.py":30:39)
#loc9 = loc("/root/workspace/VRAG_test/VRAG_lsm/tmp/torchinductor_root/pi/cpifz774z2iiy6smp4ihcfpfiipen4ntxcoweyy6oqtgbwvckqca.py":30:34)
#loc10 = loc("/root/workspace/VRAG_test/VRAG_lsm/tmp/torchinductor_root/pi/cpifz774z2iiy6smp4ihcfpfiipen4ntxcoweyy6oqtgbwvckqca.py":30:56)
#loc11 = loc("/root/workspace/VRAG_test/VRAG_lsm/tmp/torchinductor_root/pi/cpifz774z2iiy6smp4ihcfpfiipen4ntxcoweyy6oqtgbwvckqca.py":26:36)
#loc12 = loc("/root/workspace/VRAG_test/VRAG_lsm/tmp/torchinductor_root/pi/cpifz774z2iiy6smp4ihcfpfiipen4ntxcoweyy6oqtgbwvckqca.py":27:27)
#loc13 = loc("/root/workspace/VRAG_test/VRAG_lsm/tmp/torchinductor_root/pi/cpifz774z2iiy6smp4ihcfpfiipen4ntxcoweyy6oqtgbwvckqca.py":30:48)
#loc14 = loc("/root/workspace/VRAG_test/VRAG_lsm/tmp/torchinductor_root/pi/cpifz774z2iiy6smp4ihcfpfiipen4ntxcoweyy6oqtgbwvckqca.py":30:107)
#loc15 = loc("/root/workspace/miniconda3/envs/vrag/lib/python3.10/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc16 = loc("/root/workspace/VRAG_test/VRAG_lsm/tmp/torchinductor_root/pi/cpifz774z2iiy6smp4ihcfpfiipen4ntxcoweyy6oqtgbwvckqca.py":33:45)
#loc17 = loc("/root/workspace/miniconda3/envs/vrag/lib/python3.10/site-packages/torch/_inductor/runtime/triton_helpers.py":120:21)
#loc18 = loc("/root/workspace/miniconda3/envs/vrag/lib/python3.10/site-packages/torch/_inductor/runtime/triton_helpers.py":120:16)
#loc19 = loc("/root/workspace/miniconda3/envs/vrag/lib/python3.10/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc20 = loc("/root/workspace/VRAG_test/VRAG_lsm/tmp/torchinductor_root/pi/cpifz774z2iiy6smp4ihcfpfiipen4ntxcoweyy6oqtgbwvckqca.py":34:46)
#loc21 = loc("/root/workspace/VRAG_test/VRAG_lsm/tmp/torchinductor_root/pi/cpifz774z2iiy6smp4ihcfpfiipen4ntxcoweyy6oqtgbwvckqca.py":34:8)
#loc22 = loc("/root/workspace/miniconda3/envs/vrag/lib/python3.10/site-packages/torch/_inductor/runtime/triton_helpers.py":131:29)
#loc24 = loc("/root/workspace/VRAG_test/VRAG_lsm/tmp/torchinductor_root/pi/cpifz774z2iiy6smp4ihcfpfiipen4ntxcoweyy6oqtgbwvckqca.py":35:41)
#loc25 = loc("/root/workspace/VRAG_test/VRAG_lsm/tmp/torchinductor_root/pi/cpifz774z2iiy6smp4ihcfpfiipen4ntxcoweyy6oqtgbwvckqca.py":40:25)
#loc26 = loc("/root/workspace/VRAG_test/VRAG_lsm/tmp/torchinductor_root/pi/cpifz774z2iiy6smp4ihcfpfiipen4ntxcoweyy6oqtgbwvckqca.py":42:43)
#loc27 = loc("/root/workspace/VRAG_test/VRAG_lsm/tmp/torchinductor_root/pi/cpifz774z2iiy6smp4ihcfpfiipen4ntxcoweyy6oqtgbwvckqca.py":42:39)
#loc28 = loc("/root/workspace/VRAG_test/VRAG_lsm/tmp/torchinductor_root/pi/cpifz774z2iiy6smp4ihcfpfiipen4ntxcoweyy6oqtgbwvckqca.py":42:34)
#loc29 = loc("/root/workspace/VRAG_test/VRAG_lsm/tmp/torchinductor_root/pi/cpifz774z2iiy6smp4ihcfpfiipen4ntxcoweyy6oqtgbwvckqca.py":42:56)
#loc30 = loc("/root/workspace/VRAG_test/VRAG_lsm/tmp/torchinductor_root/pi/cpifz774z2iiy6smp4ihcfpfiipen4ntxcoweyy6oqtgbwvckqca.py":44:27)
#loc31 = loc("/root/workspace/VRAG_test/VRAG_lsm/tmp/torchinductor_root/pi/cpifz774z2iiy6smp4ihcfpfiipen4ntxcoweyy6oqtgbwvckqca.py":46:23)
#loc32 = loc("/root/workspace/VRAG_test/VRAG_lsm/tmp/torchinductor_root/pi/cpifz774z2iiy6smp4ihcfpfiipen4ntxcoweyy6oqtgbwvckqca.py":48:38)
#loc33 = loc("/root/workspace/VRAG_test/VRAG_lsm/tmp/torchinductor_root/pi/cpifz774z2iiy6smp4ihcfpfiipen4ntxcoweyy6oqtgbwvckqca.py":49:23)
#loc34 = loc("/root/workspace/VRAG_test/VRAG_lsm/tmp/torchinductor_root/pi/cpifz774z2iiy6smp4ihcfpfiipen4ntxcoweyy6oqtgbwvckqca.py":38:36)
#loc35 = loc("/root/workspace/VRAG_test/VRAG_lsm/tmp/torchinductor_root/pi/cpifz774z2iiy6smp4ihcfpfiipen4ntxcoweyy6oqtgbwvckqca.py":39:27)
#loc36 = loc("/root/workspace/VRAG_test/VRAG_lsm/tmp/torchinductor_root/pi/cpifz774z2iiy6smp4ihcfpfiipen4ntxcoweyy6oqtgbwvckqca.py":42:48)
#loc37 = loc("/root/workspace/VRAG_test/VRAG_lsm/tmp/torchinductor_root/pi/cpifz774z2iiy6smp4ihcfpfiipen4ntxcoweyy6oqtgbwvckqca.py":42:107)
#loc38 = loc("/root/workspace/VRAG_test/VRAG_lsm/tmp/torchinductor_root/pi/cpifz774z2iiy6smp4ihcfpfiipen4ntxcoweyy6oqtgbwvckqca.py":50:28)
#loc39 = loc("/root/workspace/VRAG_test/VRAG_lsm/tmp/torchinductor_root/pi/cpifz774z2iiy6smp4ihcfpfiipen4ntxcoweyy6oqtgbwvckqca.py":52:25)
#loc40 = loc("/root/workspace/VRAG_test/VRAG_lsm/tmp/torchinductor_root/pi/cpifz774z2iiy6smp4ihcfpfiipen4ntxcoweyy6oqtgbwvckqca.py":53:48)
#loc41 = loc("/root/workspace/VRAG_test/VRAG_lsm/tmp/torchinductor_root/pi/cpifz774z2iiy6smp4ihcfpfiipen4ntxcoweyy6oqtgbwvckqca.py":55:47)
#loc42 = loc("/root/workspace/VRAG_test/VRAG_lsm/tmp/torchinductor_root/pi/cpifz774z2iiy6smp4ihcfpfiipen4ntxcoweyy6oqtgbwvckqca.py":56:48)
#loc43 = loc("/root/workspace/VRAG_test/VRAG_lsm/tmp/torchinductor_root/pi/cpifz774z2iiy6smp4ihcfpfiipen4ntxcoweyy6oqtgbwvckqca.py":56:8)
#loc44 = loc("/root/workspace/miniconda3/envs/vrag/lib/python3.10/site-packages/triton/language/standard.py":267:36)
#loc46 = loc("/root/workspace/miniconda3/envs/vrag/lib/python3.10/site-packages/triton/language/standard.py":256:15)
#loc47 = loc("/root/workspace/VRAG_test/VRAG_lsm/tmp/torchinductor_root/pi/cpifz774z2iiy6smp4ihcfpfiipen4ntxcoweyy6oqtgbwvckqca.py":57:30)
#loc49 = loc("/root/workspace/VRAG_test/VRAG_lsm/tmp/torchinductor_root/pi/cpifz774z2iiy6smp4ihcfpfiipen4ntxcoweyy6oqtgbwvckqca.py":58:43)
#loc50 = loc("/root/workspace/VRAG_test/VRAG_lsm/tmp/torchinductor_root/pi/cpifz774z2iiy6smp4ihcfpfiipen4ntxcoweyy6oqtgbwvckqca.py":62:25)
#loc51 = loc("/root/workspace/VRAG_test/VRAG_lsm/tmp/torchinductor_root/pi/cpifz774z2iiy6smp4ihcfpfiipen4ntxcoweyy6oqtgbwvckqca.py":64:44)
#loc52 = loc("/root/workspace/VRAG_test/VRAG_lsm/tmp/torchinductor_root/pi/cpifz774z2iiy6smp4ihcfpfiipen4ntxcoweyy6oqtgbwvckqca.py":64:40)
#loc53 = loc("/root/workspace/VRAG_test/VRAG_lsm/tmp/torchinductor_root/pi/cpifz774z2iiy6smp4ihcfpfiipen4ntxcoweyy6oqtgbwvckqca.py":64:35)
#loc54 = loc("/root/workspace/VRAG_test/VRAG_lsm/tmp/torchinductor_root/pi/cpifz774z2iiy6smp4ihcfpfiipen4ntxcoweyy6oqtgbwvckqca.py":64:57)
#loc55 = loc("/root/workspace/VRAG_test/VRAG_lsm/tmp/torchinductor_root/pi/cpifz774z2iiy6smp4ihcfpfiipen4ntxcoweyy6oqtgbwvckqca.py":66:24)
#loc56 = loc("/root/workspace/VRAG_test/VRAG_lsm/tmp/torchinductor_root/pi/cpifz774z2iiy6smp4ihcfpfiipen4ntxcoweyy6oqtgbwvckqca.py":60:36)
#loc57 = loc("/root/workspace/VRAG_test/VRAG_lsm/tmp/torchinductor_root/pi/cpifz774z2iiy6smp4ihcfpfiipen4ntxcoweyy6oqtgbwvckqca.py":61:27)
#loc58 = loc("/root/workspace/VRAG_test/VRAG_lsm/tmp/torchinductor_root/pi/cpifz774z2iiy6smp4ihcfpfiipen4ntxcoweyy6oqtgbwvckqca.py":64:49)
#loc59 = loc("/root/workspace/VRAG_test/VRAG_lsm/tmp/torchinductor_root/pi/cpifz774z2iiy6smp4ihcfpfiipen4ntxcoweyy6oqtgbwvckqca.py":64:108)
#loc60 = loc("/root/workspace/VRAG_test/VRAG_lsm/tmp/torchinductor_root/pi/cpifz774z2iiy6smp4ihcfpfiipen4ntxcoweyy6oqtgbwvckqca.py":67:28)
#loc61 = loc("/root/workspace/VRAG_test/VRAG_lsm/tmp/torchinductor_root/pi/cpifz774z2iiy6smp4ihcfpfiipen4ntxcoweyy6oqtgbwvckqca.py":69:25)
#loc62 = loc("/root/workspace/VRAG_test/VRAG_lsm/tmp/torchinductor_root/pi/cpifz774z2iiy6smp4ihcfpfiipen4ntxcoweyy6oqtgbwvckqca.py":70:48)
#loc63 = loc("/root/workspace/VRAG_test/VRAG_lsm/tmp/torchinductor_root/pi/cpifz774z2iiy6smp4ihcfpfiipen4ntxcoweyy6oqtgbwvckqca.py":70:8)
#loc65 = loc("/root/workspace/VRAG_test/VRAG_lsm/tmp/torchinductor_root/pi/cpifz774z2iiy6smp4ihcfpfiipen4ntxcoweyy6oqtgbwvckqca.py":71:30)
#loc66 = loc("/root/workspace/VRAG_test/VRAG_lsm/tmp/torchinductor_root/pi/cpifz774z2iiy6smp4ihcfpfiipen4ntxcoweyy6oqtgbwvckqca.py":75:25)
#loc67 = loc("/root/workspace/VRAG_test/VRAG_lsm/tmp/torchinductor_root/pi/cpifz774z2iiy6smp4ihcfpfiipen4ntxcoweyy6oqtgbwvckqca.py":77:44)
#loc68 = loc("/root/workspace/VRAG_test/VRAG_lsm/tmp/torchinductor_root/pi/cpifz774z2iiy6smp4ihcfpfiipen4ntxcoweyy6oqtgbwvckqca.py":77:40)
#loc69 = loc("/root/workspace/VRAG_test/VRAG_lsm/tmp/torchinductor_root/pi/cpifz774z2iiy6smp4ihcfpfiipen4ntxcoweyy6oqtgbwvckqca.py":77:35)
#loc70 = loc("/root/workspace/VRAG_test/VRAG_lsm/tmp/torchinductor_root/pi/cpifz774z2iiy6smp4ihcfpfiipen4ntxcoweyy6oqtgbwvckqca.py":77:57)
#loc71 = loc("/root/workspace/VRAG_test/VRAG_lsm/tmp/torchinductor_root/pi/cpifz774z2iiy6smp4ihcfpfiipen4ntxcoweyy6oqtgbwvckqca.py":79:24)
#loc72 = loc("/root/workspace/VRAG_test/VRAG_lsm/tmp/torchinductor_root/pi/cpifz774z2iiy6smp4ihcfpfiipen4ntxcoweyy6oqtgbwvckqca.py":81:24)
#loc73 = loc("/root/workspace/VRAG_test/VRAG_lsm/tmp/torchinductor_root/pi/cpifz774z2iiy6smp4ihcfpfiipen4ntxcoweyy6oqtgbwvckqca.py":73:36)
#loc74 = loc("/root/workspace/VRAG_test/VRAG_lsm/tmp/torchinductor_root/pi/cpifz774z2iiy6smp4ihcfpfiipen4ntxcoweyy6oqtgbwvckqca.py":74:27)
#loc75 = loc("/root/workspace/VRAG_test/VRAG_lsm/tmp/torchinductor_root/pi/cpifz774z2iiy6smp4ihcfpfiipen4ntxcoweyy6oqtgbwvckqca.py":77:49)
#loc76 = loc("/root/workspace/VRAG_test/VRAG_lsm/tmp/torchinductor_root/pi/cpifz774z2iiy6smp4ihcfpfiipen4ntxcoweyy6oqtgbwvckqca.py":77:109)
#loc77 = loc("/root/workspace/VRAG_test/VRAG_lsm/tmp/torchinductor_root/pi/cpifz774z2iiy6smp4ihcfpfiipen4ntxcoweyy6oqtgbwvckqca.py":80:28)
#loc78 = loc("/root/workspace/VRAG_test/VRAG_lsm/tmp/torchinductor_root/pi/cpifz774z2iiy6smp4ihcfpfiipen4ntxcoweyy6oqtgbwvckqca.py":82:24)
#loc79 = loc("/root/workspace/VRAG_test/VRAG_lsm/tmp/torchinductor_root/pi/cpifz774z2iiy6smp4ihcfpfiipen4ntxcoweyy6oqtgbwvckqca.py":84:25)
#loc80 = loc("/root/workspace/VRAG_test/VRAG_lsm/tmp/torchinductor_root/pi/cpifz774z2iiy6smp4ihcfpfiipen4ntxcoweyy6oqtgbwvckqca.py":85:48)
#loc81 = loc("/root/workspace/VRAG_test/VRAG_lsm/tmp/torchinductor_root/pi/cpifz774z2iiy6smp4ihcfpfiipen4ntxcoweyy6oqtgbwvckqca.py":85:8)
#loc83 = loc("/root/workspace/VRAG_test/VRAG_lsm/tmp/torchinductor_root/pi/cpifz774z2iiy6smp4ihcfpfiipen4ntxcoweyy6oqtgbwvckqca.py":86:30)
#loc84 = loc("/root/workspace/VRAG_test/VRAG_lsm/tmp/torchinductor_root/pi/cpifz774z2iiy6smp4ihcfpfiipen4ntxcoweyy6oqtgbwvckqca.py":87:24)
#loc85 = loc("/root/workspace/VRAG_test/VRAG_lsm/tmp/torchinductor_root/pi/cpifz774z2iiy6smp4ihcfpfiipen4ntxcoweyy6oqtgbwvckqca.py":88:24)
#loc86 = loc("/root/workspace/VRAG_test/VRAG_lsm/tmp/torchinductor_root/pi/cpifz774z2iiy6smp4ihcfpfiipen4ntxcoweyy6oqtgbwvckqca.py":90:21)
#loc87 = loc("/root/workspace/VRAG_test/VRAG_lsm/tmp/torchinductor_root/pi/cpifz774z2iiy6smp4ihcfpfiipen4ntxcoweyy6oqtgbwvckqca.py":92:35)
#loc88 = loc("/root/workspace/VRAG_test/VRAG_lsm/tmp/torchinductor_root/pi/cpifz774z2iiy6smp4ihcfpfiipen4ntxcoweyy6oqtgbwvckqca.py":93:20)
#loc89 = loc("/root/workspace/VRAG_test/VRAG_lsm/tmp/torchinductor_root/pi/cpifz774z2iiy6smp4ihcfpfiipen4ntxcoweyy6oqtgbwvckqca.py":94:20)
#loc90 = loc("/root/workspace/VRAG_test/VRAG_lsm/tmp/torchinductor_root/pi/cpifz774z2iiy6smp4ihcfpfiipen4ntxcoweyy6oqtgbwvckqca.py":95:4)
#loc91 = loc("/root/workspace/VRAG_test/VRAG_lsm/tmp/torchinductor_root/pi/cpifz774z2iiy6smp4ihcfpfiipen4ntxcoweyy6oqtgbwvckqca.py":96:28)
#loc92 = loc("/root/workspace/VRAG_test/VRAG_lsm/tmp/torchinductor_root/pi/cpifz774z2iiy6smp4ihcfpfiipen4ntxcoweyy6oqtgbwvckqca.py":96:40)
#loc93 = loc("/root/workspace/VRAG_test/VRAG_lsm/tmp/torchinductor_root/pi/cpifz774z2iiy6smp4ihcfpfiipen4ntxcoweyy6oqtgbwvckqca.py":96:4)
#loc94 = loc(callsite(#loc15 at #loc16))
#loc95 = loc(callsite(#loc17 at #loc16))
#loc96 = loc(callsite(#loc18 at #loc16))
#loc97 = loc(callsite(#loc19 at #loc16))
#loc98 = loc(callsite(#loc22 at #loc23))
#loc100 = loc(callsite(#loc15 at #loc22))
#loc101 = loc(callsite(#loc17 at #loc22))
#loc102 = loc(callsite(#loc18 at #loc22))
#loc103 = loc(callsite(#loc19 at #loc22))
#loc104 = loc(callsite(#loc15 at #loc41))
#loc105 = loc(callsite(#loc17 at #loc41))
#loc106 = loc(callsite(#loc18 at #loc41))
#loc107 = loc(callsite(#loc19 at #loc41))
#loc108 = loc(callsite(#loc44 at #loc45))
#loc110 = loc(callsite(#loc46 at #loc44))
#loc111 = loc(callsite(#loc22 at #loc48))
#loc113 = loc(callsite(#loc44 at #loc64))
#loc115 = loc(callsite(#loc44 at #loc82))
#loc117 = loc(callsite(#loc100 at #loc23))
#loc118 = loc(callsite(#loc101 at #loc23))
#loc119 = loc(callsite(#loc102 at #loc23))
#loc120 = loc(callsite(#loc103 at #loc23))
#loc121 = loc(callsite(#loc110 at #loc45))
#loc122 = loc(callsite(#loc100 at #loc48))
#loc123 = loc(callsite(#loc101 at #loc48))
#loc124 = loc(callsite(#loc102 at #loc48))
#loc125 = loc(callsite(#loc103 at #loc48))
#loc126 = loc(callsite(#loc110 at #loc64))
#loc127 = loc(callsite(#loc110 at #loc82))
