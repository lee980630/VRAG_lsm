; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_add_bitwise_and_bitwise_or_ge_lt_mul_sub_0(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2, i32 %3, i32 %4, i32 %5, i32 %6) local_unnamed_addr !dbg !7 {
  %8 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09@$2 ld.global.b64 { $0 }, [ $1 + 0 ];", "=l,l,b"(ptr addrspace(1) %0, i1 true) #1, !dbg !10
  %9 = insertelement <2 x i32> poison, i32 %2, i64 0, !dbg !11
  %10 = insertelement <2 x i32> %9, i32 %4, i64 1, !dbg !11
  %11 = insertelement <2 x i32> poison, i32 %3, i64 0, !dbg !12
  %12 = insertelement <2 x i32> %11, i32 %5, i64 1, !dbg !12
  %13 = insertelement <2 x i64> poison, i64 %8, i64 0, !dbg !11
  %14 = shufflevector <2 x i64> %13, <2 x i64> poison, <2 x i32> zeroinitializer, !dbg !11
  %15 = sext <2 x i32> %10 to <2 x i64>, !dbg !11
  %16 = icmp sge <2 x i64> %14, %15, !dbg !11
  %17 = sext <2 x i32> %12 to <2 x i64>, !dbg !12
  %18 = icmp slt <2 x i64> %14, %17, !dbg !12
  %19 = and <2 x i1> %16, %18, !dbg !13
  %shift = shufflevector <2 x i1> %19, <2 x i1> poison, <2 x i32> <i32 1, i32 poison>, !dbg !14
  %20 = or <2 x i1> %19, %shift, !dbg !14
  %21 = extractelement <2 x i1> %20, i64 0, !dbg !14
  %22 = add i32 %2, %4, !dbg !15
  %23 = add i32 %3, %6, !dbg !15
  %24 = sub i32 %22, %23, !dbg !15
  %25 = insertelement <2 x i32> %9, i32 %24, i64 1, !dbg !16
  %26 = select <2 x i1> %19, <2 x i32> %25, <2 x i32> zeroinitializer, !dbg !16
  %27 = extractelement <2 x i32> %26, i64 0, !dbg !17
  %28 = sext i32 %27 to i64, !dbg !17
  %29 = extractelement <2 x i32> %26, i64 1, !dbg !17
  %30 = sext i32 %29 to i64, !dbg !17
  %31 = add nsw i64 %30, %28, !dbg !17
  %32 = sub i64 %8, %31, !dbg !17
  %33 = select i1 %21, i64 %32, i64 0, !dbg !18
  %34 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !19
  %35 = and i32 %34, 31, !dbg !19
  %36 = icmp eq i32 %35, 0, !dbg !19
  tail call void asm sideeffect "@$2 st.global.b64 [ $1 + 0 ], { $0 };", "l,l,b"(i64 %33, ptr addrspace(1) %1, i1 %36) #1, !dbg !19
  ret void, !dbg !20
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cnquqfyzsk6da5ukzp7tcvdnwuotyfclcrfexl6errjxsy5ny3wv.py", directory: "/root/workspace/VRAG_test/VRAG_lsm/tmp/torchinductor_root/nq")
!4 = !{ptr @triton_poi_fused_add_bitwise_and_bitwise_or_ge_lt_mul_sub_0, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_add_bitwise_and_bitwise_or_ge_lt_mul_sub_0, !"reqntidx", i32 32}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_add_bitwise_and_bitwise_or_ge_lt_mul_sub_0", linkageName: "triton_poi_fused_add_bitwise_and_bitwise_or_ge_lt_mul_sub_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 24, column: 19, scope: !7)
!11 = !DILocation(line: 27, column: 19, scope: !7)
!12 = !DILocation(line: 29, column: 18, scope: !7)
!13 = !DILocation(line: 30, column: 18, scope: !7)
!14 = !DILocation(line: 36, column: 19, scope: !7)
!15 = !DILocation(line: 41, column: 38, scope: !7)
!16 = !DILocation(line: 42, column: 20, scope: !7)
!17 = !DILocation(line: 44, column: 19, scope: !7)
!18 = !DILocation(line: 45, column: 20, scope: !7)
!19 = !DILocation(line: 46, column: 65, scope: !7)
!20 = !DILocation(line: 46, column: 4, scope: !7)
