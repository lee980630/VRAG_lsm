//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_80
.address_size 64

	// .globl	triton_red_fused__softmax__to_copy_logsumexp_mul_sub_sum_0 // -- Begin function triton_red_fused__softmax__to_copy_logsumexp_mul_sub_sum_0
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_red_fused__softmax__to_copy_logsumexp_mul_sub_sum_0
.visible .entry triton_red_fused__softmax__to_copy_logsumexp_mul_sub_sum_0(
	.param .u64 .ptr .global .align 1 triton_red_fused__softmax__to_copy_logsumexp_mul_sub_sum_0_param_0,
	.param .u64 .ptr .global .align 1 triton_red_fused__softmax__to_copy_logsumexp_mul_sub_sum_0_param_1,
	.param .u64 .ptr .global .align 1 triton_red_fused__softmax__to_copy_logsumexp_mul_sub_sum_0_param_2,
	.param .u64 .ptr .global .align 1 triton_red_fused__softmax__to_copy_logsumexp_mul_sub_sum_0_param_3,
	.param .u64 .ptr .global .align 1 triton_red_fused__softmax__to_copy_logsumexp_mul_sub_sum_0_param_4,
	.param .u32 triton_red_fused__softmax__to_copy_logsumexp_mul_sub_sum_0_param_5,
	.param .u32 triton_red_fused__softmax__to_copy_logsumexp_mul_sub_sum_0_param_6,
	.param .u32 triton_red_fused__softmax__to_copy_logsumexp_mul_sub_sum_0_param_7
)
.reqntid 512, 1, 1
{
	.reg .pred 	%p<110>;
	.reg .b16 	%rs<39>;
	.reg .b32 	%r<202>;
	.reg .f32 	%f<317>;
	.reg .b64 	%rd<38>;
	.loc	1 19 0                          // cshlarcqs4i4ihwoqzt3ylj4dpzkunlwsajkkhruwyp3glbrsn3n.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cshlarcqs4i4ihwoqzt3ylj4dpzkunlwsajkkhruwyp3glbrsn3n.py:19:0

// %bb.0:
	ld.param.u32 	%r36, [triton_red_fused__softmax__to_copy_logsumexp_mul_sub_sum_0_param_7];
	ld.param.u32 	%r35, [triton_red_fused__softmax__to_copy_logsumexp_mul_sub_sum_0_param_6];
	ld.param.u64 	%rd4, [triton_red_fused__softmax__to_copy_logsumexp_mul_sub_sum_0_param_2];
	ld.param.u64 	%rd3, [triton_red_fused__softmax__to_copy_logsumexp_mul_sub_sum_0_param_1];
$L__tmp0:
	.loc	1 20 28                         // cshlarcqs4i4ihwoqzt3ylj4dpzkunlwsajkkhruwyp3glbrsn3n.py:20:28
	// begin inline asm
	mov.u32 %r37, %ctaid.x;
	// end inline asm
	.loc	1 23 33                         // cshlarcqs4i4ihwoqzt3ylj4dpzkunlwsajkkhruwyp3glbrsn3n.py:23:33
	mov.u32 	%r2, %tid.x;
	and.b32  	%r3, %r2, 31;
	shr.u32 	%r4, %r2, 5;
	and.b32  	%r5, %r2, 511;
	ld.param.u32 	%r38, [triton_red_fused__softmax__to_copy_logsumexp_mul_sub_sum_0_param_5];
	or.b32  	%r6, %r5, 512;
	or.b32  	%r7, %r5, 1024;
	or.b32  	%r8, %r5, 1536;
	.loc	1 30 43                         // cshlarcqs4i4ihwoqzt3ylj4dpzkunlwsajkkhruwyp3glbrsn3n.py:30:43
	mul.lo.s32 	%r9, %r37, %r38;
	.loc	1 26 36                         // cshlarcqs4i4ihwoqzt3ylj4dpzkunlwsajkkhruwyp3glbrsn3n.py:26:36
	setp.lt.s32 	%p11, %r36, 1;
	mov.f32 	%f288, 0fFF800000;
	setp.lt.s32 	%p109, %r37, %r35;
	mov.u16 	%rs26, 0;
	mov.f32 	%f289, %f288;
	mov.f32 	%f290, %f288;
	mov.f32 	%f291, %f288;
	@%p11 bra 	$L__BB0_3;
// %bb.1:                               // %.lr.ph.preheader
	.loc	1 0 36                          // cshlarcqs4i4ihwoqzt3ylj4dpzkunlwsajkkhruwyp3glbrsn3n.py:0:36
	mov.f32 	%f288, 0fFF800000;
	mov.b32 	%r199, 0;
	mov.f32 	%f289, %f288;
	mov.f32 	%f290, %f288;
	mov.f32 	%f291, %f288;
$L__BB0_2:                              // %.lr.ph
                                        // =>This Inner Loop Header: Depth=1
	.loc	1 27 27                         // cshlarcqs4i4ihwoqzt3ylj4dpzkunlwsajkkhruwyp3glbrsn3n.py:27:27
	or.b32  	%r44, %r199, %r8;
	or.b32  	%r45, %r199, %r7;
	or.b32  	%r46, %r199, %r6;
	or.b32  	%r47, %r199, %r5;
	.loc	1 30 39                         // cshlarcqs4i4ihwoqzt3ylj4dpzkunlwsajkkhruwyp3glbrsn3n.py:30:39
	add.s32 	%r48, %r47, %r9;
	add.s32 	%r49, %r46, %r9;
	add.s32 	%r50, %r45, %r9;
	add.s32 	%r51, %r44, %r9;
	.loc	1 30 34                         // cshlarcqs4i4ihwoqzt3ylj4dpzkunlwsajkkhruwyp3glbrsn3n.py:30:34
	mul.wide.s32 	%rd11, %r48, 2;
	add.s64 	%rd7, %rd3, %rd11;
	mul.wide.s32 	%rd12, %r49, 2;
	add.s64 	%rd8, %rd3, %rd12;
	mul.wide.s32 	%rd13, %r50, 2;
	add.s64 	%rd9, %rd3, %rd13;
	mul.wide.s32 	%rd14, %r51, 2;
	add.s64 	%rd10, %rd3, %rd14;
$L__tmp1:
	.loc	2 120 21                        // triton_helpers.py:120:21
	setp.nan.f32 	%p20, %f291, %f291;
	setp.nan.f32 	%p21, %f290, %f290;
	setp.nan.f32 	%p22, %f289, %f289;
	setp.nan.f32 	%p23, %f288, %f288;
$L__tmp2:
	.loc	1 28 25                         // cshlarcqs4i4ihwoqzt3ylj4dpzkunlwsajkkhruwyp3glbrsn3n.py:28:25
	setp.lt.s32 	%p24, %r47, %r36;
	setp.lt.s32 	%p25, %r46, %r36;
	setp.lt.s32 	%p26, %r45, %r36;
	setp.lt.s32 	%p27, %r44, %r36;
	.loc	1 30 56                         // cshlarcqs4i4ihwoqzt3ylj4dpzkunlwsajkkhruwyp3glbrsn3n.py:30:56
	and.pred  	%p19, %p109, %p27;
	and.pred  	%p17, %p109, %p26;
	and.pred  	%p15, %p109, %p25;
	and.pred  	%p13, %p109, %p24;
	.loc	1 30 48                         // cshlarcqs4i4ihwoqzt3ylj4dpzkunlwsajkkhruwyp3glbrsn3n.py:30:48
	// begin inline asm
	mov.u16 %rs1, 0x0;
	@%p13 ld.global.L1::evict_last.b16 { %rs1 }, [ %rd7 + 0 ];
	@!%p13 mov.u16 %rs1, %rs26;
	// end inline asm
	// begin inline asm
	mov.u16 %rs3, 0x0;
	@%p15 ld.global.L1::evict_last.b16 { %rs3 }, [ %rd8 + 0 ];
	@!%p15 mov.u16 %rs3, %rs26;
	// end inline asm
	// begin inline asm
	mov.u16 %rs5, 0x0;
	@%p17 ld.global.L1::evict_last.b16 { %rs5 }, [ %rd9 + 0 ];
	@!%p17 mov.u16 %rs5, %rs26;
	// end inline asm
	// begin inline asm
	mov.u16 %rs7, 0x0;
	@%p19 ld.global.L1::evict_last.b16 { %rs7 }, [ %rd10 + 0 ];
	@!%p19 mov.u16 %rs7, %rs26;
	// end inline asm
	.loc	1 30 107                        // cshlarcqs4i4ihwoqzt3ylj4dpzkunlwsajkkhruwyp3glbrsn3n.py:30:107
	// begin inline asm
	cvt.f32.bf16 %r40, %rs1;
	// end inline asm
	mov.b32 	%f65, %r40;
	// begin inline asm
	cvt.f32.bf16 %r41, %rs3;
	// end inline asm
	mov.b32 	%f66, %r41;
	// begin inline asm
	cvt.f32.bf16 %r42, %rs5;
	// end inline asm
	mov.b32 	%f67, %r42;
	// begin inline asm
	cvt.f32.bf16 %r43, %rs7;
	// end inline asm
	mov.b32 	%f68, %r43;
$L__tmp3:
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.gt.f32 	%p28, %f291, %f65;
	setp.gt.f32 	%p29, %f290, %f68;
	setp.gt.f32 	%p30, %f289, %f67;
	setp.gt.f32 	%p31, %f288, %f66;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f69, %f288, %f66, %p31;
	selp.f32 	%f70, %f288, %f69, %p23;
	selp.f32 	%f71, %f289, %f67, %p30;
	selp.f32 	%f72, %f289, %f71, %p22;
	selp.f32 	%f73, %f290, %f68, %p29;
	selp.f32 	%f74, %f290, %f73, %p21;
	selp.f32 	%f75, %f291, %f65, %p28;
	selp.f32 	%f76, %f291, %f75, %p20;
$L__tmp4:
	.loc	1 34 46                         // cshlarcqs4i4ihwoqzt3ylj4dpzkunlwsajkkhruwyp3glbrsn3n.py:34:46
	selp.f32 	%f291, %f76, %f291, %p13;
	selp.f32 	%f290, %f74, %f290, %p19;
	selp.f32 	%f289, %f72, %f289, %p17;
	selp.f32 	%f288, %f70, %f288, %p15;
	.loc	1 26 36                         // cshlarcqs4i4ihwoqzt3ylj4dpzkunlwsajkkhruwyp3glbrsn3n.py:26:36
	add.s32 	%r199, %r199, 2048;
	setp.lt.s32 	%p32, %r199, %r36;
	@%p32 bra 	$L__BB0_2;
$L__BB0_3:                              // %._crit_edge
	.loc	1 0 36                          // cshlarcqs4i4ihwoqzt3ylj4dpzkunlwsajkkhruwyp3glbrsn3n.py:0:36
	ld.param.u64 	%rd5, [triton_red_fused__softmax__to_copy_logsumexp_mul_sub_sum_0_param_3];
$L__tmp5:
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.gt.f32 	%p39, %f291, %f288;
	.loc	2 120 21                        // triton_helpers.py:120:21
	setp.nan.f32 	%p40, %f291, %f291;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f78, %f291, %f288, %p40;
	selp.f32 	%f79, %f291, %f78, %p39;
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.gt.f32 	%p41, %f79, %f289;
	.loc	2 120 21                        // triton_helpers.py:120:21
	setp.nan.f32 	%p42, %f79, %f79;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f80, %f79, %f289, %p42;
	selp.f32 	%f81, %f79, %f80, %p41;
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.gt.f32 	%p43, %f81, %f290;
	.loc	2 120 21                        // triton_helpers.py:120:21
	setp.nan.f32 	%p44, %f81, %f81;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f82, %f81, %f290, %p44;
	selp.f32 	%f83, %f81, %f82, %p43;
	.loc	2 131 29                        // triton_helpers.py:131:29
	mov.b32 	%r59, %f83;
	shfl.sync.bfly.b32	%r60, %r59, 16, 31, -1;
	mov.b32 	%f84, %r60;
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.gt.f32 	%p45, %f83, %f84;
	.loc	2 120 21                        // triton_helpers.py:120:21
	setp.nan.f32 	%p46, %f83, %f83;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f85, %f83, %f84, %p45;
	selp.f32 	%f86, %f83, %f85, %p46;
	.loc	2 131 29                        // triton_helpers.py:131:29
	mov.b32 	%r61, %f86;
	shfl.sync.bfly.b32	%r62, %r61, 8, 31, -1;
	mov.b32 	%f87, %r62;
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.gt.f32 	%p47, %f86, %f87;
	.loc	2 120 21                        // triton_helpers.py:120:21
	setp.nan.f32 	%p48, %f86, %f86;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f88, %f86, %f87, %p48;
	selp.f32 	%f89, %f86, %f88, %p47;
	.loc	2 131 29                        // triton_helpers.py:131:29
	mov.b32 	%r63, %f89;
	shfl.sync.bfly.b32	%r64, %r63, 4, 31, -1;
	mov.b32 	%f90, %r64;
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.gt.f32 	%p49, %f89, %f90;
	.loc	2 120 21                        // triton_helpers.py:120:21
	setp.nan.f32 	%p50, %f89, %f89;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f91, %f89, %f90, %p50;
	selp.f32 	%f92, %f89, %f91, %p49;
	.loc	2 131 29                        // triton_helpers.py:131:29
	mov.b32 	%r65, %f92;
	shfl.sync.bfly.b32	%r66, %r65, 2, 31, -1;
	mov.b32 	%f93, %r66;
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.gt.f32 	%p51, %f92, %f93;
	.loc	2 120 21                        // triton_helpers.py:120:21
	setp.nan.f32 	%p52, %f92, %f92;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f94, %f92, %f93, %p52;
	selp.f32 	%f95, %f92, %f94, %p51;
	.loc	2 131 29                        // triton_helpers.py:131:29
	mov.b32 	%r67, %f95;
	shfl.sync.bfly.b32	%r68, %r67, 1, 31, -1;
	mov.b32 	%f96, %r68;
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.gt.f32 	%p53, %f95, %f96;
	.loc	2 120 21                        // triton_helpers.py:120:21
	setp.nan.f32 	%p54, %f95, %f95;
	.loc	2 131 29                        // triton_helpers.py:131:29
	setp.eq.s32 	%p98, %r3, 0;
	and.b32  	%r69, %r4, 15;
	shl.b32 	%r70, %r69, 2;
	mov.u32 	%r71, global_smem;
	add.s32 	%r145, %r71, %r70;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.b32 	%r72, %r67, %r68, %p54;
	selp.b32 	%r53, %r67, %r72, %p53;
	.loc	2 131 29                        // triton_helpers.py:131:29
	// begin inline asm
	@%p98 st.shared.b32 [ %r145 + 0 ], %r53;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p99, %r2, 16;
	shl.b32 	%r73, %r2, 2;
	add.s32 	%r148, %r71, %r73;
	// begin inline asm
	@%p99 ld.shared.b32 %r54, [ %r148 + 0 ];
	// end inline asm
	mov.b32 	%f97, %r54;
	shfl.sync.bfly.b32	%r74, %r54, 8, 31, -1;
	mov.b32 	%f98, %r74;
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.gt.f32 	%p55, %f97, %f98;
	.loc	2 120 21                        // triton_helpers.py:120:21
	setp.nan.f32 	%p56, %f97, %f97;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f99, %f97, %f98, %p55;
	selp.f32 	%f100, %f97, %f99, %p56;
	.loc	2 131 29                        // triton_helpers.py:131:29
	mov.b32 	%r75, %f100;
	shfl.sync.bfly.b32	%r76, %r75, 4, 31, -1;
	mov.b32 	%f101, %r76;
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.gt.f32 	%p57, %f100, %f101;
	.loc	2 120 21                        // triton_helpers.py:120:21
	setp.nan.f32 	%p58, %f100, %f100;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f102, %f100, %f101, %p58;
	selp.f32 	%f103, %f100, %f102, %p57;
	.loc	2 131 29                        // triton_helpers.py:131:29
	mov.b32 	%r77, %f103;
	shfl.sync.bfly.b32	%r78, %r77, 2, 31, -1;
	mov.b32 	%f104, %r78;
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.gt.f32 	%p59, %f103, %f104;
	.loc	2 120 21                        // triton_helpers.py:120:21
	setp.nan.f32 	%p60, %f103, %f103;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f105, %f103, %f104, %p60;
	selp.f32 	%f106, %f103, %f105, %p59;
	.loc	2 131 29                        // triton_helpers.py:131:29
	mov.b32 	%r79, %f106;
	shfl.sync.bfly.b32	%r80, %r79, 1, 31, -1;
	mov.b32 	%f107, %r80;
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.gt.f32 	%p61, %f106, %f107;
	.loc	2 120 21                        // triton_helpers.py:120:21
	setp.nan.f32 	%p62, %f106, %f106;
	.loc	2 131 29                        // triton_helpers.py:131:29
	and.b32  	%r81, %r2, 15;
	setp.eq.s32 	%p63, %r81, 0;
	and.pred  	%p100, %p99, %p63;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.b32 	%r82, %r79, %r80, %p62;
	selp.b32 	%r57, %r79, %r82, %p61;
	.loc	2 131 29                        // triton_helpers.py:131:29
	// begin inline asm
	@%p100 st.shared.b32 [ %r148 + 0 ], %r57;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f13, [global_smem];
$L__tmp6:
	.loc	1 36 25                         // cshlarcqs4i4ihwoqzt3ylj4dpzkunlwsajkkhruwyp3glbrsn3n.py:36:25
	cvt.s64.s32 	%rd1, %r37;
	mul.wide.s32 	%rd16, %r37, 4;
	add.s64 	%rd15, %rd4, %rd16;
	.loc	1 36 36                         // cshlarcqs4i4ihwoqzt3ylj4dpzkunlwsajkkhruwyp3glbrsn3n.py:36:36
	setp.eq.s32 	%p64, %r5, 0;
	mov.b32 	%r58, %f13;
	and.pred  	%p106, %p64, %p109;
	// begin inline asm
	@%p106 st.global.b32 [ %rd15 + 0 ], { %r58 };
	// end inline asm
	mov.f32 	%f308, 0f00000000;
	mov.f32 	%f296, %f308;
	mov.f32 	%f297, %f308;
	mov.f32 	%f298, %f308;
	mov.f32 	%f299, %f308;
	.loc	1 38 36                         // cshlarcqs4i4ihwoqzt3ylj4dpzkunlwsajkkhruwyp3glbrsn3n.py:38:36
	@%p11 bra 	$L__BB0_6;
// %bb.4:                               // %.lr.ph8.preheader
	add.s32 	%r22, %r9, %r5;
	mov.b32 	%r200, 0;
	mov.f32 	%f296, 0f00000000;
	mov.f32 	%f297, %f296;
	mov.f32 	%f298, %f296;
	mov.f32 	%f299, %f296;
$L__BB0_5:                              // %.lr.ph8
                                        // =>This Inner Loop Header: Depth=1
	.loc	1 39 27                         // cshlarcqs4i4ihwoqzt3ylj4dpzkunlwsajkkhruwyp3glbrsn3n.py:39:27
	add.s32 	%r88, %r5, %r200;
	add.s32 	%r89, %r88, 512;
	add.s32 	%r90, %r88, 1024;
	.loc	1 40 25                         // cshlarcqs4i4ihwoqzt3ylj4dpzkunlwsajkkhruwyp3glbrsn3n.py:40:25
	add.s32 	%r91, %r88, 1536;
	setp.lt.s32 	%p74, %r88, %r36;
	setp.lt.s32 	%p75, %r89, %r36;
	setp.lt.s32 	%p76, %r90, %r36;
	setp.lt.s32 	%p77, %r91, %r36;
	.loc	1 42 39                         // cshlarcqs4i4ihwoqzt3ylj4dpzkunlwsajkkhruwyp3glbrsn3n.py:42:39
	add.s32 	%r92, %r22, %r200;
	add.s32 	%r93, %r92, 512;
	add.s32 	%r94, %r92, 1024;
	.loc	1 42 34                         // cshlarcqs4i4ihwoqzt3ylj4dpzkunlwsajkkhruwyp3glbrsn3n.py:42:34
	add.s32 	%r95, %r92, 1536;
	mul.wide.s32 	%rd21, %r92, 2;
	add.s64 	%rd17, %rd3, %rd21;
	mul.wide.s32 	%rd22, %r93, 2;
	add.s64 	%rd18, %rd3, %rd22;
	mul.wide.s32 	%rd23, %r94, 2;
	add.s64 	%rd19, %rd3, %rd23;
	mul.wide.s32 	%rd24, %r95, 2;
	add.s64 	%rd20, %rd3, %rd24;
	.loc	1 42 56                         // cshlarcqs4i4ihwoqzt3ylj4dpzkunlwsajkkhruwyp3glbrsn3n.py:42:56
	and.pred  	%p65, %p109, %p74;
	and.pred  	%p67, %p109, %p75;
	and.pred  	%p69, %p109, %p76;
	and.pred  	%p71, %p109, %p77;
	.loc	1 42 48                         // cshlarcqs4i4ihwoqzt3ylj4dpzkunlwsajkkhruwyp3glbrsn3n.py:42:48
	// begin inline asm
	mov.u16 %rs13, 0x0;
	@%p65 ld.global.L1::evict_last.b16 { %rs13 }, [ %rd17 + 0 ];
	@!%p65 mov.u16 %rs13, %rs26;
	// end inline asm
	// begin inline asm
	mov.u16 %rs15, 0x0;
	@%p67 ld.global.L1::evict_last.b16 { %rs15 }, [ %rd18 + 0 ];
	@!%p67 mov.u16 %rs15, %rs26;
	// end inline asm
	// begin inline asm
	mov.u16 %rs17, 0x0;
	@%p69 ld.global.L1::evict_last.b16 { %rs17 }, [ %rd19 + 0 ];
	@!%p69 mov.u16 %rs17, %rs26;
	// end inline asm
	// begin inline asm
	mov.u16 %rs19, 0x0;
	@%p71 ld.global.L1::evict_last.b16 { %rs19 }, [ %rd20 + 0 ];
	@!%p71 mov.u16 %rs19, %rs26;
	// end inline asm
	.loc	1 42 107                        // cshlarcqs4i4ihwoqzt3ylj4dpzkunlwsajkkhruwyp3glbrsn3n.py:42:107
	// begin inline asm
	cvt.f32.bf16 %r84, %rs13;
	// end inline asm
	mov.b32 	%f117, %r84;
	// begin inline asm
	cvt.f32.bf16 %r85, %rs15;
	// end inline asm
	mov.b32 	%f118, %r85;
	// begin inline asm
	cvt.f32.bf16 %r86, %rs17;
	// end inline asm
	mov.b32 	%f119, %r86;
	// begin inline asm
	cvt.f32.bf16 %r87, %rs19;
	// end inline asm
	mov.b32 	%f120, %r87;
	.loc	1 44 22                         // cshlarcqs4i4ihwoqzt3ylj4dpzkunlwsajkkhruwyp3glbrsn3n.py:44:22
	sub.f32 	%f121, %f117, %f13;
	sub.f32 	%f122, %f118, %f13;
	sub.f32 	%f123, %f119, %f13;
	sub.f32 	%f124, %f120, %f13;
	.loc	1 45 27                         // cshlarcqs4i4ihwoqzt3ylj4dpzkunlwsajkkhruwyp3glbrsn3n.py:45:27
	mul.f32 	%f110, %f121, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f109, %f110;
	// end inline asm
	mul.f32 	%f112, %f122, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f111, %f112;
	// end inline asm
	mul.f32 	%f114, %f123, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f113, %f114;
	// end inline asm
	mul.f32 	%f116, %f124, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f115, %f116;
	// end inline asm
	.loc	1 47 25                         // cshlarcqs4i4ihwoqzt3ylj4dpzkunlwsajkkhruwyp3glbrsn3n.py:47:25
	add.f32 	%f125, %f296, %f109;
	add.f32 	%f126, %f297, %f111;
	add.f32 	%f127, %f298, %f113;
	add.f32 	%f128, %f299, %f115;
	.loc	1 48 48                         // cshlarcqs4i4ihwoqzt3ylj4dpzkunlwsajkkhruwyp3glbrsn3n.py:48:48
	selp.f32 	%f296, %f125, %f296, %p65;
	selp.f32 	%f297, %f126, %f297, %p67;
	selp.f32 	%f298, %f127, %f298, %p69;
	selp.f32 	%f299, %f128, %f299, %p71;
	.loc	1 38 36                         // cshlarcqs4i4ihwoqzt3ylj4dpzkunlwsajkkhruwyp3glbrsn3n.py:38:36
	add.s32 	%r200, %r200, 2048;
	setp.lt.s32 	%p78, %r200, %r36;
	@%p78 bra 	$L__BB0_5;
$L__BB0_6:                              // %._crit_edge9
$L__tmp7:
	.loc	3 267 36                        // standard.py:267:36
	bar.sync 	0;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f137, %f296, %f297;
	add.f32 	%f138, %f298, %f137;
	add.f32 	%f139, %f299, %f138;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r103, %f139;
	shfl.sync.bfly.b32	%r104, %r103, 16, 31, -1;
	mov.b32 	%f140, %r104;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f141, %f139, %f140;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r105, %f141;
	shfl.sync.bfly.b32	%r106, %r105, 8, 31, -1;
	mov.b32 	%f142, %r106;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f143, %f141, %f142;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r107, %f143;
	shfl.sync.bfly.b32	%r108, %r107, 4, 31, -1;
	mov.b32 	%f144, %r108;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f145, %f143, %f144;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r109, %f145;
	shfl.sync.bfly.b32	%r110, %r109, 2, 31, -1;
	mov.b32 	%f146, %r110;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f147, %f145, %f146;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r111, %f147;
	shfl.sync.bfly.b32	%r112, %r111, 1, 31, -1;
	mov.b32 	%f148, %r112;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f149, %f147, %f148;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r97, %f149;
	// begin inline asm
	@%p98 st.shared.b32 [ %r145 + 0 ], %r97;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p99 ld.shared.b32 %r98, [ %r148 + 0 ];
	// end inline asm
	mov.b32 	%f150, %r98;
	shfl.sync.bfly.b32	%r113, %r98, 8, 31, -1;
	mov.b32 	%f151, %r113;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f152, %f150, %f151;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r114, %f152;
	shfl.sync.bfly.b32	%r115, %r114, 4, 31, -1;
	mov.b32 	%f153, %r115;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f154, %f152, %f153;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r116, %f154;
	shfl.sync.bfly.b32	%r117, %r116, 2, 31, -1;
	mov.b32 	%f155, %r117;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f156, %f154, %f155;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r118, %f156;
	shfl.sync.bfly.b32	%r119, %r118, 1, 31, -1;
	mov.b32 	%f157, %r119;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f158, %f156, %f157;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r101, %f158;
	// begin inline asm
	@%p100 st.shared.b32 [ %r148 + 0 ], %r101;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f26, [global_smem];
$L__tmp8:
	.loc	1 50 25                         // cshlarcqs4i4ihwoqzt3ylj4dpzkunlwsajkkhruwyp3glbrsn3n.py:50:25
	shl.b64 	%rd26, %rd1, 2;
	add.s64 	%rd25, %rd5, %rd26;
	.loc	1 50 37                         // cshlarcqs4i4ihwoqzt3ylj4dpzkunlwsajkkhruwyp3glbrsn3n.py:50:37
	mov.b32 	%r127, %f26;
	// begin inline asm
	@%p106 st.global.b32 [ %rd25 + 0 ], { %r127 };
	// end inline asm
	.loc	1 68 25                         // cshlarcqs4i4ihwoqzt3ylj4dpzkunlwsajkkhruwyp3glbrsn3n.py:68:25
	abs.f32 	%f159, %f13;
	setp.eq.f32 	%p84, %f159, 0f7F800000;
	.loc	1 70 39                         // cshlarcqs4i4ihwoqzt3ylj4dpzkunlwsajkkhruwyp3glbrsn3n.py:70:39
	selp.f32 	%f27, 0f00000000, %f13, %p84;
	mov.f32 	%f309, %f308;
	mov.f32 	%f310, %f308;
	mov.f32 	%f311, %f308;
	mov.f32 	%f312, %f308;
	mov.f32 	%f313, %f308;
	mov.f32 	%f314, %f308;
	mov.f32 	%f315, %f308;
	.loc	1 53 36                         // cshlarcqs4i4ihwoqzt3ylj4dpzkunlwsajkkhruwyp3glbrsn3n.py:53:36
	@%p11 bra 	$L__BB0_9;
// %bb.7:                               // %.lr.ph12.preheader
	.loc	1 0 36                          // cshlarcqs4i4ihwoqzt3ylj4dpzkunlwsajkkhruwyp3glbrsn3n.py:0:36
	mov.b32 	%r201, 0;
	mov.f32 	%f308, 0f00000000;
	mov.f32 	%f309, %f308;
	mov.f32 	%f310, %f308;
	mov.f32 	%f311, %f308;
	mov.f32 	%f312, %f308;
	mov.f32 	%f313, %f308;
	mov.f32 	%f314, %f308;
	mov.f32 	%f315, %f308;
$L__BB0_8:                              // %.lr.ph12
                                        // =>This Inner Loop Header: Depth=1
	.loc	1 54 27                         // cshlarcqs4i4ihwoqzt3ylj4dpzkunlwsajkkhruwyp3glbrsn3n.py:54:27
	or.b32  	%r137, %r201, %r8;
	or.b32  	%r138, %r201, %r7;
	or.b32  	%r139, %r201, %r6;
	or.b32  	%r140, %r201, %r5;
	.loc	1 57 40                         // cshlarcqs4i4ihwoqzt3ylj4dpzkunlwsajkkhruwyp3glbrsn3n.py:57:40
	add.s32 	%r141, %r140, %r9;
	add.s32 	%r142, %r139, %r9;
	add.s32 	%r143, %r138, %r9;
	add.s32 	%r144, %r137, %r9;
	.loc	1 57 35                         // cshlarcqs4i4ihwoqzt3ylj4dpzkunlwsajkkhruwyp3glbrsn3n.py:57:35
	mul.wide.s32 	%rd31, %r141, 2;
	add.s64 	%rd27, %rd3, %rd31;
	mul.wide.s32 	%rd32, %r142, 2;
	add.s64 	%rd28, %rd3, %rd32;
	mul.wide.s32 	%rd33, %r143, 2;
	add.s64 	%rd29, %rd3, %rd33;
	mul.wide.s32 	%rd34, %r144, 2;
	add.s64 	%rd30, %rd3, %rd34;
	.loc	1 55 25                         // cshlarcqs4i4ihwoqzt3ylj4dpzkunlwsajkkhruwyp3glbrsn3n.py:55:25
	setp.lt.s32 	%p93, %r140, %r36;
	setp.lt.s32 	%p94, %r139, %r36;
	setp.lt.s32 	%p95, %r138, %r36;
	setp.lt.s32 	%p96, %r137, %r36;
	.loc	1 57 57                         // cshlarcqs4i4ihwoqzt3ylj4dpzkunlwsajkkhruwyp3glbrsn3n.py:57:57
	and.pred  	%p92, %p109, %p96;
	and.pred  	%p90, %p109, %p95;
	and.pred  	%p88, %p109, %p94;
	and.pred  	%p86, %p109, %p93;
	.loc	1 57 49                         // cshlarcqs4i4ihwoqzt3ylj4dpzkunlwsajkkhruwyp3glbrsn3n.py:57:49
	// begin inline asm
	mov.u16 %rs25, 0x0;
	@%p86 ld.global.L1::evict_first.b16 { %rs25 }, [ %rd27 + 0 ];
	@!%p86 mov.u16 %rs25, %rs26;
	// end inline asm
	// begin inline asm
	mov.u16 %rs27, 0x0;
	@%p88 ld.global.L1::evict_first.b16 { %rs27 }, [ %rd28 + 0 ];
	@!%p88 mov.u16 %rs27, %rs26;
	// end inline asm
	// begin inline asm
	mov.u16 %rs29, 0x0;
	@%p90 ld.global.L1::evict_first.b16 { %rs29 }, [ %rd29 + 0 ];
	@!%p90 mov.u16 %rs29, %rs26;
	// end inline asm
	// begin inline asm
	mov.u16 %rs31, 0x0;
	@%p92 ld.global.L1::evict_first.b16 { %rs31 }, [ %rd30 + 0 ];
	@!%p92 mov.u16 %rs31, %rs26;
	// end inline asm
	.loc	1 57 109                        // cshlarcqs4i4ihwoqzt3ylj4dpzkunlwsajkkhruwyp3glbrsn3n.py:57:109
	// begin inline asm
	cvt.f32.bf16 %r121, %rs25;
	// end inline asm
	mov.b32 	%f184, %r121;
	// begin inline asm
	cvt.f32.bf16 %r122, %rs27;
	// end inline asm
	mov.b32 	%f185, %r122;
	// begin inline asm
	cvt.f32.bf16 %r123, %rs29;
	// end inline asm
	mov.b32 	%f186, %r123;
	// begin inline asm
	cvt.f32.bf16 %r124, %rs31;
	// end inline asm
	mov.b32 	%f187, %r124;
	.loc	1 59 24                         // cshlarcqs4i4ihwoqzt3ylj4dpzkunlwsajkkhruwyp3glbrsn3n.py:59:24
	sub.f32 	%f188, %f184, %f13;
	sub.f32 	%f189, %f185, %f13;
	sub.f32 	%f190, %f186, %f13;
	sub.f32 	%f191, %f187, %f13;
	.loc	1 60 28                         // cshlarcqs4i4ihwoqzt3ylj4dpzkunlwsajkkhruwyp3glbrsn3n.py:60:28
	mul.f32 	%f169, %f188, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f168, %f169;
	// end inline asm
	mul.f32 	%f171, %f189, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f170, %f171;
	// end inline asm
	mul.f32 	%f173, %f190, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f172, %f173;
	// end inline asm
	mul.f32 	%f175, %f191, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f174, %f175;
	// end inline asm
	.loc	1 61 24                         // cshlarcqs4i4ihwoqzt3ylj4dpzkunlwsajkkhruwyp3glbrsn3n.py:61:24
	mov.b32 	%r126, %f168;
	// begin inline asm
	div.full.f32 %r125, %r126, %r127;
	// end inline asm
	mov.b32 	%f192, %r125;
	mov.b32 	%r129, %f170;
	// begin inline asm
	div.full.f32 %r128, %r129, %r127;
	// end inline asm
	mov.b32 	%f193, %r128;
	mov.b32 	%r132, %f172;
	// begin inline asm
	div.full.f32 %r131, %r132, %r127;
	// end inline asm
	mov.b32 	%f194, %r131;
	mov.b32 	%r135, %f174;
	// begin inline asm
	div.full.f32 %r134, %r135, %r127;
	// end inline asm
	mov.b32 	%f195, %r134;
	.loc	1 71 24                         // cshlarcqs4i4ihwoqzt3ylj4dpzkunlwsajkkhruwyp3glbrsn3n.py:71:24
	sub.f32 	%f196, %f184, %f27;
	sub.f32 	%f197, %f185, %f27;
	sub.f32 	%f198, %f186, %f27;
	sub.f32 	%f199, %f187, %f27;
	.loc	1 72 28                         // cshlarcqs4i4ihwoqzt3ylj4dpzkunlwsajkkhruwyp3glbrsn3n.py:72:28
	mul.f32 	%f177, %f196, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f176, %f177;
	// end inline asm
	mul.f32 	%f179, %f197, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f178, %f179;
	// end inline asm
	mul.f32 	%f181, %f198, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f180, %f181;
	// end inline asm
	mul.f32 	%f183, %f199, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f182, %f183;
	// end inline asm
	.loc	1 64 25                         // cshlarcqs4i4ihwoqzt3ylj4dpzkunlwsajkkhruwyp3glbrsn3n.py:64:25
	fma.rn.f32 	%f200, %f184, %f192, %f308;
	fma.rn.f32 	%f201, %f185, %f193, %f309;
	fma.rn.f32 	%f202, %f186, %f194, %f310;
	fma.rn.f32 	%f203, %f187, %f195, %f311;
	add.f32 	%f204, %f312, %f176;
	add.f32 	%f205, %f313, %f178;
	add.f32 	%f206, %f314, %f180;
	add.f32 	%f207, %f315, %f182;
	.loc	1 65 48                         // cshlarcqs4i4ihwoqzt3ylj4dpzkunlwsajkkhruwyp3glbrsn3n.py:65:48
	selp.f32 	%f311, %f203, %f311, %p92;
	selp.f32 	%f310, %f202, %f310, %p90;
	selp.f32 	%f309, %f201, %f309, %p88;
	selp.f32 	%f308, %f200, %f308, %p86;
	selp.f32 	%f315, %f207, %f315, %p92;
	selp.f32 	%f314, %f206, %f314, %p90;
	selp.f32 	%f313, %f205, %f313, %p88;
	selp.f32 	%f312, %f204, %f312, %p86;
	.loc	1 53 36                         // cshlarcqs4i4ihwoqzt3ylj4dpzkunlwsajkkhruwyp3glbrsn3n.py:53:36
	add.s32 	%r201, %r201, 2048;
	setp.lt.s32 	%p97, %r201, %r36;
	@%p97 bra 	$L__BB0_8;
$L__BB0_9:                              // %._crit_edge13
	.loc	1 0 36                          // cshlarcqs4i4ihwoqzt3ylj4dpzkunlwsajkkhruwyp3glbrsn3n.py:0:36
	ld.param.u64 	%rd6, [triton_red_fused__softmax__to_copy_logsumexp_mul_sub_sum_0_param_4];
	ld.param.u64 	%rd2, [triton_red_fused__softmax__to_copy_logsumexp_mul_sub_sum_0_param_0];
$L__tmp9:
	.loc	3 267 36                        // standard.py:267:36
	bar.sync 	0;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f208, %f308, %f309;
	add.f32 	%f209, %f310, %f208;
	add.f32 	%f210, %f311, %f209;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r157, %f210;
	shfl.sync.bfly.b32	%r158, %r157, 16, 31, -1;
	mov.b32 	%f211, %r158;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f212, %f210, %f211;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r159, %f212;
	shfl.sync.bfly.b32	%r160, %r159, 8, 31, -1;
	mov.b32 	%f213, %r160;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f214, %f212, %f213;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r161, %f214;
	shfl.sync.bfly.b32	%r162, %r161, 4, 31, -1;
	mov.b32 	%f215, %r162;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f216, %f214, %f215;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r163, %f216;
	shfl.sync.bfly.b32	%r164, %r163, 2, 31, -1;
	mov.b32 	%f217, %r164;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f218, %f216, %f217;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r165, %f218;
	shfl.sync.bfly.b32	%r166, %r165, 1, 31, -1;
	mov.b32 	%f219, %r166;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f220, %f218, %f219;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r146, %f220;
	// begin inline asm
	@%p98 st.shared.b32 [ %r145 + 0 ], %r146;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p99 ld.shared.b32 %r147, [ %r148 + 0 ];
	// end inline asm
	mov.b32 	%f221, %r147;
	shfl.sync.bfly.b32	%r167, %r147, 8, 31, -1;
	mov.b32 	%f222, %r167;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f223, %f221, %f222;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r168, %f223;
	shfl.sync.bfly.b32	%r169, %r168, 4, 31, -1;
	mov.b32 	%f224, %r169;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f225, %f223, %f224;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r170, %f225;
	shfl.sync.bfly.b32	%r171, %r170, 2, 31, -1;
	mov.b32 	%f226, %r171;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f227, %f225, %f226;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r172, %f227;
	shfl.sync.bfly.b32	%r173, %r172, 1, 31, -1;
	mov.b32 	%f228, %r173;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f229, %f227, %f228;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r150, %f229;
	// begin inline asm
	@%p100 st.shared.b32 [ %r148 + 0 ], %r150;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f52, [global_smem];
$L__tmp10:
	.loc	3 267 36                        // standard.py:267:36
	bar.sync 	0;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f230, %f312, %f313;
	add.f32 	%f231, %f314, %f230;
	add.f32 	%f232, %f315, %f231;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r174, %f232;
	shfl.sync.bfly.b32	%r175, %r174, 16, 31, -1;
	mov.b32 	%f233, %r175;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f234, %f232, %f233;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r176, %f234;
	shfl.sync.bfly.b32	%r177, %r176, 8, 31, -1;
	mov.b32 	%f235, %r177;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f236, %f234, %f235;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r178, %f236;
	shfl.sync.bfly.b32	%r179, %r178, 4, 31, -1;
	mov.b32 	%f237, %r179;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f238, %f236, %f237;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r180, %f238;
	shfl.sync.bfly.b32	%r181, %r180, 2, 31, -1;
	mov.b32 	%f239, %r181;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f240, %f238, %f239;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r182, %f240;
	shfl.sync.bfly.b32	%r183, %r182, 1, 31, -1;
	mov.b32 	%f241, %r183;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f242, %f240, %f241;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r152, %f242;
	// begin inline asm
	@%p98 st.shared.b32 [ %r145 + 0 ], %r152;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p99 ld.shared.b32 %r153, [ %r148 + 0 ];
	// end inline asm
	mov.b32 	%f243, %r153;
	shfl.sync.bfly.b32	%r184, %r153, 8, 31, -1;
	mov.b32 	%f244, %r184;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f245, %f243, %f244;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r185, %f245;
	shfl.sync.bfly.b32	%r186, %r185, 4, 31, -1;
	mov.b32 	%f246, %r186;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f247, %f245, %f246;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r187, %f247;
	shfl.sync.bfly.b32	%r188, %r187, 2, 31, -1;
	mov.b32 	%f248, %r188;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f249, %f247, %f248;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r189, %f249;
	shfl.sync.bfly.b32	%r190, %r189, 1, 31, -1;
	mov.b32 	%f250, %r190;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f251, %f249, %f250;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r156, %f251;
	// begin inline asm
	@%p100 st.shared.b32 [ %r148 + 0 ], %r156;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f252, [global_smem];
$L__tmp11:
	.loc	1 78 24                         // cshlarcqs4i4ihwoqzt3ylj4dpzkunlwsajkkhruwyp3glbrsn3n.py:78:24
	setp.lt.f32 	%p104, %f252, 0f00800000;
	mul.f32 	%f253, %f252, 0f4B000000;
	selp.f32 	%f53, %f253, %f252, %p104;
	selp.f32 	%f254, 0fC1B80000, 0f00000000, %p104;
	mov.b32 	%r191, %f53;
	add.s32 	%r192, %r191, -1059760811;
	and.b32  	%r193, %r192, -8388608;
	sub.s32 	%r194, %r191, %r193;
	mov.b32 	%f255, %r194;
	cvt.rn.f32.s32 	%f256, %r193;
	mov.f32 	%f257, 0f34000000;
	fma.rn.ftz.f32 	%f258, %f256, %f257, %f254;
	add.f32 	%f259, %f255, 0fBF800000;
	mov.f32 	%f260, 0f3E1039F6;
	mov.f32 	%f261, 0fBE055027;
	fma.rn.ftz.f32 	%f262, %f261, %f259, %f260;
	mov.f32 	%f263, 0fBDF8CDCC;
	fma.rn.ftz.f32 	%f264, %f262, %f259, %f263;
	mov.f32 	%f265, 0f3E0F2955;
	fma.rn.ftz.f32 	%f266, %f264, %f259, %f265;
	mov.f32 	%f267, 0fBE2AD8B9;
	fma.rn.ftz.f32 	%f268, %f266, %f259, %f267;
	mov.f32 	%f269, 0f3E4CED0B;
	fma.rn.ftz.f32 	%f270, %f268, %f259, %f269;
	mov.f32 	%f271, 0fBE7FFF22;
	fma.rn.ftz.f32 	%f272, %f270, %f259, %f271;
	mov.f32 	%f273, 0f3EAAAA78;
	fma.rn.ftz.f32 	%f274, %f272, %f259, %f273;
	mov.f32 	%f275, 0fBF000000;
	fma.rn.ftz.f32 	%f276, %f274, %f259, %f275;
	mul.f32 	%f277, %f259, %f276;
	fma.rn.ftz.f32 	%f278, %f277, %f259, %f259;
	mov.f32 	%f279, 0f3F317218;
	fma.rn.ftz.f32 	%f316, %f258, %f279, %f278;
	setp.lt.u32 	%p105, %r191, 2139095040;
	@%p105 bra 	$L__BB0_11;
// %bb.10:                              // %__nv_fmaf_rn.exit.i.i
	.loc	1 0 24                          // cshlarcqs4i4ihwoqzt3ylj4dpzkunlwsajkkhruwyp3glbrsn3n.py:0:24
	mov.f32 	%f280, 0f7F800000;
	fma.rn.ftz.f32 	%f316, %f53, %f280, %f280;
$L__BB0_11:                             // %__nv_logf.exit
	.loc	1 78 24                         // cshlarcqs4i4ihwoqzt3ylj4dpzkunlwsajkkhruwyp3glbrsn3n.py:78:24
	setp.eq.f32 	%p108, %f53, 0f00000000;
	selp.f32 	%f281, 0fFF800000, %f316, %p108;
	.loc	1 84 20                         // cshlarcqs4i4ihwoqzt3ylj4dpzkunlwsajkkhruwyp3glbrsn3n.py:84:20
	add.f32 	%f282, %f27, %f281;
	.loc	1 85 20                         // cshlarcqs4i4ihwoqzt3ylj4dpzkunlwsajkkhruwyp3glbrsn3n.py:85:20
	sub.f32 	%f283, %f282, %f52;
	.loc	1 86 4                          // cshlarcqs4i4ihwoqzt3ylj4dpzkunlwsajkkhruwyp3glbrsn3n.py:86:4
	bar.sync 	0;
	.loc	1 87 28                         // cshlarcqs4i4ihwoqzt3ylj4dpzkunlwsajkkhruwyp3glbrsn3n.py:87:28
	add.s64 	%rd35, %rd2, %rd26;
	.loc	1 87 40                         // cshlarcqs4i4ihwoqzt3ylj4dpzkunlwsajkkhruwyp3glbrsn3n.py:87:40
	mov.b32 	%r195, %f283;
	// begin inline asm
	@%p106 st.global.b32 [ %rd35 + 0 ], { %r195 };
	// end inline asm
	.loc	1 88 25                         // cshlarcqs4i4ihwoqzt3ylj4dpzkunlwsajkkhruwyp3glbrsn3n.py:88:25
	add.s64 	%rd36, %rd6, %rd26;
	.loc	1 88 37                         // cshlarcqs4i4ihwoqzt3ylj4dpzkunlwsajkkhruwyp3glbrsn3n.py:88:37
	mov.b32 	%r196, %f282;
	// begin inline asm
	@%p106 st.global.b32 [ %rd36 + 0 ], { %r196 };
	// end inline asm
	.loc	1 88 4                          // cshlarcqs4i4ihwoqzt3ylj4dpzkunlwsajkkhruwyp3glbrsn3n.py:88:4
	ret;
$L__tmp12:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/root/workspace/VRAG_test/VRAG_lsm/tmp/torchinductor_root/sh/cshlarcqs4i4ihwoqzt3ylj4dpzkunlwsajkkhruwyp3glbrsn3n.py"
	.file	2 "/root/workspace/miniconda3/envs/vrag/lib/python3.10/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.file	3 "/root/workspace/miniconda3/envs/vrag/lib/python3.10/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 342                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x14f DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 115
.b8 104
.b8 108
.b8 97
.b8 114
.b8 99
.b8 113
.b8 115
.b8 52
.b8 105
.b8 52
.b8 105
.b8 104
.b8 119
.b8 111
.b8 113
.b8 122
.b8 116
.b8 51
.b8 121
.b8 108
.b8 106
.b8 52
.b8 100
.b8 112
.b8 122
.b8 107
.b8 117
.b8 110
.b8 108
.b8 119
.b8 115
.b8 97
.b8 106
.b8 107
.b8 107
.b8 104
.b8 114
.b8 117
.b8 119
.b8 121
.b8 112
.b8 51
.b8 103
.b8 108
.b8 98
.b8 114
.b8 115
.b8 110
.b8 51
.b8 110
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 114
.b8 111
.b8 111
.b8 116
.b8 47
.b8 119
.b8 111
.b8 114
.b8 107
.b8 115
.b8 112
.b8 97
.b8 99
.b8 101
.b8 47
.b8 86
.b8 82
.b8 65
.b8 71
.b8 95
.b8 116
.b8 101
.b8 115
.b8 116
.b8 47
.b8 86
.b8 82
.b8 65
.b8 71
.b8 95
.b8 108
.b8 115
.b8 109
.b8 47
.b8 116
.b8 109
.b8 112
.b8 47
.b8 116
.b8 111
.b8 114
.b8 99
.b8 104
.b8 105
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 114
.b8 111
.b8 111
.b8 116
.b8 47
.b8 115
.b8 104
.b8 0
.b8 2                                   // Abbrev [2] 0x8e:0x3d DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 100
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 115
.b8 111
.b8 102
.b8 116
.b8 109
.b8 97
.b8 120
.b8 95
.b8 95
.b8 116
.b8 111
.b8 95
.b8 99
.b8 111
.b8 112
.b8 121
.b8 95
.b8 108
.b8 111
.b8 103
.b8 115
.b8 117
.b8 109
.b8 101
.b8 120
.b8 112
.b8 95
.b8 109
.b8 117
.b8 108
.b8 95
.b8 115
.b8 117
.b8 98
.b8 95
.b8 115
.b8 117
.b8 109
.b8 95
.b8 48
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xcb:0x8e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 142                                // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xe0:0x18 DW_TAG_inlined_subroutine
.b32 142                                // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 33                                  // DW_AT_call_line
.b8 45                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xf8:0x18 DW_TAG_inlined_subroutine
.b32 142                                // DW_AT_abstract_origin
.b64 $L__tmp5                           // DW_AT_low_pc
.b64 $L__tmp6                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 35                                  // DW_AT_call_line
.b8 38                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0x110:0x18 DW_TAG_inlined_subroutine
.b32 142                                // DW_AT_abstract_origin
.b64 $L__tmp7                           // DW_AT_low_pc
.b64 $L__tmp8                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 49                                  // DW_AT_call_line
.b8 27                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0x128:0x18 DW_TAG_inlined_subroutine
.b32 142                                // DW_AT_abstract_origin
.b64 $L__tmp9                           // DW_AT_low_pc
.b64 $L__tmp10                          // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 76                                  // DW_AT_call_line
.b8 27                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0x140:0x18 DW_TAG_inlined_subroutine
.b32 142                                // DW_AT_abstract_origin
.b64 $L__tmp10                          // DW_AT_low_pc
.b64 $L__tmp11                          // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 77                                  // DW_AT_call_line
.b8 27                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
